{"version":3,"sources":["components/dogsListToolbar/index.jsx","components/dogsTable/index.jsx","components/dogsGroup/index.jsx","containers/dogs/list/container.jsx","constants/index.js","containers/dogs/list/constants.js","backend/index.js","containers/dogs/list/action-creators.js","containers/dogs/list/selectors.js","containers/dogs/list/utils.js","containers/dogs/list/index.js","components/dogsItemToolbar/index.jsx","components/dogFormParam/index.js","components/dogForm/index.jsx","containers/dogs/item/container.jsx","containers/dogs/item/constants.js","containers/dogs/item/action-creators.js","containers/dogs/item/selectors.js","containers/dogs/item/index.js","components/app/index.js","containers/dogs/list/reducer.js","containers/dogs/item/reducer.js","store/root-reducer.js","store/index.js","index.js"],"names":["Toolbar","sortParams","groupParams","searchString","onParamsChange","className","defaultValue","fieldId","onChange","event","fieldValue","target","value","items","map","item","key","id","label","type","DogsTable","dogsList","isLoading","columns","onRowClick","field","index","text","onClick","chipId","DogsGroup","title","onItemClick","Container","handleItemClick","history","props","push","handleToolbarParamsChange","dogsListChangeSortAction","dogsListChangeGroupAction","dogsListChangeSearchAction","this","fetchDogsListAction","dogsGroups","group","Component","DOGS_FIELDS_ID","DOGS_FIELDS","ACTION_TYPES","DOGS_LIST_COLUMNS","visible","dogsData","data","list","dispatch","Promise","resolve","reject","setTimeout","then","payload","catch","error","dogsListGetDataFail","isLoadingSelector","state","errorSelector","columnsSelector","Object","values","filter","column","sortParamsSelector","groupParamsSelector","searchSelector","dogsGroupReselector","createSelector","result","dog","name","toLowerCase","subString","includes","filterDogsList","find","forEach","resultItem","sort","a","b","localeCompare","groupDogsList","sortTypeId","direction","sortDogsList","mapStateToProps","dogsListState","withConnect","connect","actions","DogsListContainer","compose","withRouter","isEditing","onToolbarItemClick","disabled","Input","Textarea","Select","options","option","DogFormParam","renderFieldEditMode","href","String","DogForm","dogData","fields","dictionaries","onDataChange","onButtonClick","onSubmit","handleChange","fieldName","preventDefault","fieldLabel","fieldType","handleGoBack","dogsItemChangeModeToViewAction","handleButtonClick","dogsItemChangeModeToEditAction","fetchDogDataAction","location","pathname","substr","saveDogDataAction","dogsItemChangeFieldValueAction","DOGS_ITEM_FIELDS","fetchDogById","dogsItemGetDataSuccess","dogsItemGetDataFail","saveDogData","dogsItemSaveDogDataSuccess","dogsItemSaveDogDataFail","dogDataSelector","isEditingSelector","savedCopySelector","savedCopy","fieldsSelector","dictionariesSelector","dogsItemState","DogsItemContainer","App","path","exact","component","initialState","dogsListReducer","action","sex","isWalking","status","walkingGroup","dogsItemReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"2tsDA4EeA,G,MAvEC,SAAC,GAKV,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,eAuBA,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,uBAAjB,iEACA,4BAAQC,aAAcL,EAAWM,QAASC,SAzBvB,SAAAC,GACvBL,EAAe,CACbG,QAAS,OACTG,WAAYD,EAAME,OAAOC,UAwBnBX,EAAWY,MAAMC,KAAI,SAAAC,GAAI,OACvB,4BAAQC,IAAKD,EAAKE,GAAIL,MAAOG,EAAKE,IAAKF,EAAKG,YAMpD,yBAAKb,UAAU,iBACb,2BAAOA,UAAU,uBAAjB,uEACA,4BAAQC,aAAcJ,EAAYK,QAASC,SA7BvB,SAAAC,GACxBL,EAAe,CACbG,QAAS,QACTG,WAAYD,EAAME,OAAOC,UA4BnBV,EAAYW,MAAMC,KAAI,SAAAC,GAAI,OACxB,4BAAQC,IAAKD,EAAKE,GAAIL,MAAOG,EAAKE,IAAKF,EAAKG,YAMpD,yBAAKb,UAAU,iBACb,2BAAOA,UAAU,uBAAjB,mCACA,2BAAOc,KAAK,OAAOP,MAAOT,EAAcK,SAjCnB,SAAAC,GACzBL,EAAe,CACbG,QAAS,SACTG,WAAYD,EAAME,OAAOC,eCuBhBQ,G,MA9CG,SAAC,GAKZ,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WAgBA,OACE,yBAAKnB,UAAU,cACb,yBAAKA,UAAU,yBAEXkB,EAAQT,KAAI,SAACW,EAAOC,GAAR,OACV,yBAAKrB,UAAU,mBAAmBW,IAAKU,GAAQD,EAAME,UAMzDL,EACI,yBAAKjB,UAAU,WAAf,cACAgB,EAASP,KA3BD,SAAAC,GAGhB,OACE,yBAAKV,UAAU,kBAAkBuB,QAHf,kBAAMJ,EAAW,CAAEP,GAAIF,EAAKc,UAGSb,IAAKD,EAAKc,QAE7DN,EAAQT,KAAI,SAACW,EAAOC,GAAR,OACV,yBAAKrB,UAAU,mBAAmBW,IAAKU,GAAQX,EAAKU,EAAMR,eCevDa,G,MA3BG,SAAC,GAAD,IAChBC,EADgB,EAChBA,MACAlB,EAFgB,EAEhBA,MACAS,EAHgB,EAGhBA,UACAC,EAJgB,EAIhBA,QACAS,EALgB,EAKhBA,YALgB,OAOhB,yBAAK3B,UAAU,SACZ0B,GAAS,yBAAK1B,UAAU,SAAS0B,GAElC,kBAAC,EAAD,CACEV,SAAUR,EACVS,UAAWA,EACXC,QAASA,EACTC,WAAYQ,OCyEHC,G,iNAjFbC,gBAAkB,YAAa,IAAVjB,EAAS,EAATA,GACXkB,EAAY,EAAKC,MAAjBD,QAEJlB,GACFkB,EAAQE,KAAR,eAAqBpB,K,EAIzBqB,0BAA4B,YAA8B,IAA3B/B,EAA0B,EAA1BA,QAASG,EAAiB,EAAjBA,WACtC,OAAQH,GACN,IAAK,OACH,EAAK6B,MAAMG,yBAAyB7B,GACpC,MAEF,IAAK,QACH,EAAK0B,MAAMI,0BAA0B9B,GACrC,MAEF,IAAK,SACH,EAAK0B,MAAMK,2BAA2B/B,K,mFAtB1CgC,KAAKN,MAAMO,wB,+BA8BH,IAAD,SAQHD,KAAKN,MANPQ,EAFK,EAELA,WACAtB,EAHK,EAGLA,UACAC,EAJK,EAILA,QACAtB,EALK,EAKLA,WACAC,EANK,EAMLA,YACAC,EAPK,EAOLA,aAGF,OACE,oCACE,kBAAC,EAAD,CACEF,WAAYA,EACZC,YAAaA,EACbC,aAAcA,EACdC,eAAgBsC,KAAKJ,4BAGrBhB,EACI,yBAAKjB,UAAU,WAAf,cACAuC,EAAW9B,KAAI,SAAC+B,EAAOnB,GAAR,OACf,kBAAC,EAAD,eACEV,IAAKU,GACDmB,EAFN,CAGEvB,UAAWA,EACXC,QAASA,EACTS,YAAa,EAAKE,2B,GA3DVY,c,OCPXC,EACL,OADKA,EAED,WAFCA,EAGN,MAHMA,EAIN,MAJMA,EAKH,SALGA,EAMG,cANHA,EAOF,SAPEA,EAQA,YARAA,EASC,aATDA,EAUH,SAVGA,EAWI,eAXJA,EAYE,cAGFC,GAAW,mBACrBD,EAAsB,CACrB9B,GAAI8B,EACJpB,KAAM,uBAHc,cAKrBoB,EAA0B,CACzB9B,GAAI8B,EACJpB,KAAM,wEAPc,cASrBoB,EAAqB,CACpB9B,GAAI8B,EACJpB,KAAM,uBAXc,cAarBoB,EAAqB,CACpB9B,GAAI8B,EACJpB,KAAM,uBAfc,cAiBrBoB,EAAwB,CACvB9B,GAAI8B,EACJpB,KAAM,yCAnBc,cAqBrBoB,EAA8B,CAC7B9B,GAAI8B,EACJpB,KAAM,yCAvBc,cAyBrBoB,EAAyB,CACxB9B,GAAI8B,EACJpB,KAAM,iBA3Bc,cA6BrBoB,EAA2B,CAC1B9B,GAAI8B,EACJpB,KAAM,yCA/Bc,cAiCrBoB,EAA4B,CAC3B9B,GAAI8B,EACJpB,KAAM,kEAnCc,cAqCrBoB,EAAwB,CACvB9B,GAAI8B,EACJpB,KAAM,yCAvCc,cAyCrBoB,EAA+B,CAC9B9B,GAAI8B,EACJpB,KAAM,8EA3Cc,cA6CrBoB,EAA6B,CAC5B9B,GAAI8B,EACJpB,KAAM,qDA/Cc,G,yjBCVjB,I,EAAMsB,EACiB,6BADjBA,EAEiB,6BAFjBA,EAGc,0BAHdA,EAKY,wBALZA,EAMa,yBANbA,EAOc,0BAGdC,GAAiB,mBAC3BH,EAD2B,KAEvBC,EAAYD,GAFW,CAG1BI,SAAS,KAHiB,cAK3BJ,EAL2B,KAMvBC,EAAYD,GANW,CAO1BI,SAAS,KAPiB,cAS3BJ,EAT2B,KAUvBC,EAAYD,GAVW,CAW1BI,SAAS,KAXiB,cAa3BJ,EAb2B,KAcvBC,EAAYD,GAdW,CAe1BI,SAAS,KAfiB,cAiB3BJ,EAjB2B,KAkBvBC,EAAYD,GAlBW,CAmB1BI,SAAS,KAnBiB,G,gBCb1BC,EAAQ,YAAOC,EAAKC,MCiBXX,EAAsB,kBAAM,SAAAY,GACvCA,EAjBoC,CACpCpC,KAAM8B,IDCC,IAAIO,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTF,EAAQL,KACP,QCeFQ,MAAK,SAAAP,GAAI,OAAIE,EAhB0B,CAC1CpC,KAAM8B,EACNY,QAAS,CACPxC,SAa8CgC,QAC7CS,OAAM,SAAAC,GAAK,OAAIR,EAVQ,SAAAQ,GAAK,MAAK,CACpC5C,KAAM8B,EACNc,SAQ2BC,CAAoBD,SAGpCxB,EAA2B,SAAAhC,GAAO,MAAK,CAClDY,KAAM8B,EACNY,QAAS,CACPtD,aAISiC,EAA4B,SAAAjC,GAAO,MAAK,CACnDY,KAAM8B,EACNY,QAAS,CACPtD,aAISkC,GAA6B,SAAAtC,GAAY,MAAK,CACzDgB,KAAM8B,EACNY,QAAS,CACP1D,kB,SClCE8D,GAAoB,SAAAC,GAAK,OAAIA,EAAM5C,WAEnC6C,GAAgB,SAAAD,GAAK,OAAIA,EAAMH,OAE/BK,GAAkB,SAAAF,GAAK,OAAIG,OAAOC,OAAOJ,EAAM3C,SAASgD,QAAO,SAAAC,GAAM,OAAIA,EAAOrB,YAEhFsB,GAAqB,SAAAP,GAAK,OAAIA,EAAMjE,YAEpCyE,GAAsB,SAAAR,GAAK,OAAIA,EAAMhE,aAErCyE,GAAiB,SAAAT,GAAK,OAAIA,EAAM/D,cAEhCyE,GAAsBC,cAdH,SAAAX,GAAK,OAAIA,EAAM7C,WAgBtCoD,GACAC,GACAC,IACA,SAACtD,EAAUpB,EAAYC,EAAaC,GAClC,IAAI2E,EAASzD,EAUb,OARIlB,IACF2E,EC/BwB,SAACzD,EAAUlB,GAAX,OAC5BkB,EAASkD,QAAO,SAAAQ,GACd,IAAMC,EAAOD,EAAIC,KAAKC,cAChBC,EAAY/E,EAAa8E,cAE/B,OAAOD,EAAKG,SAASD,MD0BVE,CAAeN,EAAQ3E,IAKlC2E,EChByB,SAACzD,EAAUnB,GAAiB,IAC/CW,EAAmBX,EAAnBW,MAAON,EAAYL,EAAZK,QADuC,EAEpCM,EAAMwE,MAAK,SAAAtE,GAAI,OAAIA,EAAKE,KAAOV,MACd,GAA3BU,EAH8C,EAG9CA,GAAIC,EAH0C,EAG1CA,MAER4D,EAAS,GAcb,OAZAzD,EAASiE,SAAQ,SAAAvE,GACf,IAAMgB,EAAK,UAAMb,EAAN,aAAgBH,EAAKE,IAC1B4B,EAAQiC,EAAOO,MAAK,SAAAE,GAAU,OAAIA,EAAWxD,QAAUA,KAE7Dc,EACIA,EAAMhC,MAAMwB,KAAKtB,GACjB+D,EAAOzC,KAAK,CACVN,MAAOA,EACPlB,MAAO,CAACE,QAIT+D,EAAOU,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE1D,MAAM4D,cAAcD,EAAE3D,UDH1C6D,CAFTd,EC1BwB,SAACzD,EAAUpB,GAAgB,IAC7CY,EAA+BZ,EAA/BY,MAAgBgF,EAAe5F,EAAxBM,QADqC,EAEnCM,EAAMwE,MAAK,SAAAtE,GAAI,OAAIA,EAAKE,KAAO4E,MACL,GAAnCtF,EAH4C,EAG5CA,QAER,MAAkB,QALkC,EAGnCuF,UAGRzE,EAASmE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElF,GAASoF,cAAcD,EAAEnF,OAGrDc,EAASmE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEnF,GAASoF,cAAcF,EAAElF,ODiB/CwF,CAAajB,EAAQ7E,GAECC,MAgBpB8F,GAVS,SAAC,GAAD,IAAkB9B,EAAlB,EAAG+B,cAAH,MAA+B,CACrDrD,WAAYgC,GAAoBV,GAChC5C,UAAW2C,GAAkBC,GAC7BH,MAAOI,GAAcD,GACrB3C,QAAS6C,GAAgBF,GACzBjE,WAAYwE,GAAmBP,GAC/BhE,YAAawE,GAAoBR,GACjC/D,aAAcwE,GAAeT,KE1CzBgC,GAAcC,YAAQH,GAAiBI,GAO9BC,GALWC,kBACxBC,IACAL,GAFwBI,CAGxBrE,GCYajC,I,MAnBC,SAAC,GAGV,IAFLwG,EAEI,EAFJA,UACAC,EACI,EADJA,mBAKA,OACE,yBAAKpG,UAAU,WACb,4BAAQA,UAAU,kBAAkBuB,QALpB,kBAAM6E,EAAmB,CAAExF,GAAI,WAK/C,kCACA,4BAAQZ,UAAU,kBAAkBuB,QALpB,kBAAM6E,EAAmB,CAAExF,GAAI,UAKWyF,SAAUF,GAApE,uDCVAG,I,MAAQ,SAAC,GAAD,IAAG3B,EAAH,EAAGA,KAAMpE,EAAT,EAASA,MAAOJ,EAAhB,EAAgBA,SAAhB,OACZ,2BACEH,UAAU,kBACVc,KAAK,OACL6D,KAAMA,EACNpE,MAAOA,EACPJ,SAAUA,MAIRoG,GAAW,SAAC,GAAD,IAAG5B,EAAH,EAAGA,KAAMpE,EAAT,EAASA,MAAOJ,EAAhB,EAAgBA,SAAhB,OACf,8BACEH,UAAU,kBACV2E,KAAMA,EACNpE,MAAOA,EACPJ,SAAUA,KAIRqG,GAAS,SAAC,GAAD,IAAG7B,EAAH,EAAGA,KAAMpE,EAAT,EAASA,MAAOkG,EAAhB,EAAgBA,QAAStG,EAAzB,EAAyBA,SAAzB,OACb,4BACEH,UAAU,kBACV2E,KAAMA,EACNpE,MAAOA,EACPJ,SAAUA,GAGRsG,EAAQhG,KAAI,SAACiG,EAAQrF,GAAT,OACV,4BAAQV,IAAKU,EAAOd,MAAOmG,EAAOnG,OAAQmG,EAAO7F,YA+D1C8F,GAzDM,SAAC,GAQf,IAPLR,EAOI,EAPJA,UACAjG,EAMI,EANJA,QACAW,EAKI,EALJA,MACAN,EAII,EAJJA,MACAO,EAGI,EAHJA,KACA2F,EAEI,EAFJA,QACAtG,EACI,EADJA,SAyBA,OACE,yBAAKH,UAAU,mBACb,2BAAOA,UAAU,mBAAmBa,GAElCsF,EA3BsB,WAC1B,OAAQrF,GACN,IAAK,QACL,IAAK,OACH,OAAO,kBAAC,GAAD,CAAO6D,KAAMzE,EAASK,MAAOA,EAAOJ,SAAUA,IAEvD,IAAK,WACH,OAAO,kBAAC,GAAD,CAAUwE,KAAMzE,EAASK,MAAOA,EAAOJ,SAAUA,IAE1D,IAAK,SACH,OAAO,kBAAC,GAAD,CAAQwE,KAAMzE,EAASK,MAAOA,EAAOkG,QAASA,EAAStG,SAAUA,KAkBtEyG,GAVI,SAAT9F,EACG,uBAAG+F,KAAMtG,GAAQA,GACjB,6BAAMuG,OAAOvG,MCINwG,I,MAlEC,SAAC,GAQV,IAPLC,EAOI,EAPJA,QACAb,EAMI,EANJA,UACAc,EAKI,EALJA,OACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEMC,EAAe,SAAC,GAAD,QAAGhH,OAAUqE,EAAb,EAAaA,KAAMpE,EAAnB,EAAmBA,MAAnB,OAAiC4G,EAAa,CACjEI,UAAW5C,EACXtE,WAAYE,KAUd,OACE,0BAAM8G,SANa,SAAAjH,GACnBA,EAAMoH,iBACNH,EAASL,KAKP,yBAAKhH,UAAU,YACb,yBAAKA,UAAU,oBAEf,yBAAKA,UAAU,kBAETiH,EAAOxG,KAAI,WAAqDY,GAArD,IAAOnB,EAAP,EAAGU,GAAmB6G,EAAtB,EAAgBnG,KAAwBoG,EAAxC,EAAkC5G,KAAlC,OACT,kBAAC,GAAD,CACEH,IAAKU,EACL8E,UAAWA,EACXjG,QAASA,EACTW,MAAO4G,EACPlH,MAAOyG,EAAQ9G,GACfY,KAAM4G,EACNjB,QAASS,EAAahH,GACtBC,SAAUmH,SAQpBnB,GACE,oCACE,4BAAQnG,UAAU,mBAAmBuB,QAjCzB,kBAAM6F,EAAc,CAAExG,GAAI,aAiCtC,oDACA,4BAAQZ,UAAU,mBAAmBc,KAAK,UAA1C,8DCkDGc,I,iNAzFb+F,aAAe,WAAO,IAAD,EAKf,EAAK5F,MAHPD,EAFiB,EAEjBA,QACAqE,EAHiB,EAGjBA,UACAyB,EAJiB,EAIjBA,+BAGEzB,GACFyB,IAGF9F,EAAQE,KAAK,M,EAGf6F,kBAAoB,YAClB,OAD8B,EAATjH,IAEnB,IAAK,OACH,EAAK+G,eACL,MAEF,IAAK,OACH,EAAK5F,MAAM+F,iCACX,MAEF,IAAK,SACH,EAAK/F,MAAM6F,mC,mFAhCI,IAAD,EACuBvF,KAAKN,OAG9CgG,EAJkB,EACVA,oBADU,EACUC,SACDC,SAASC,OAAO,M,+BAsCnC,IAAD,EAUH7F,KAAKN,MARPiF,EAFK,EAELA,QACA/F,EAHK,EAGLA,UACAyC,EAJK,EAILA,MACAyC,EALK,EAKLA,UACAc,EANK,EAMLA,OACAC,EAPK,EAOLA,aACAiB,EARK,EAQLA,kBACAC,EATK,EASLA,+BAGF,OAAI1E,EACI,UAAN,OAAiBA,GAIjB,oCACE,kBAAC,GAAD,CACEyC,UAAWA,EACXC,mBAAoB/D,KAAKwF,oBAGzB5G,EACE,yBAAKjB,UAAU,WAAf,cACA,kBAAC,GAAD,CACEgH,QAASA,EACTb,UAAWA,EACXc,OAAQA,EACRC,aAAcA,EACdC,aAAciB,EACdhB,cAAe/E,KAAKwF,kBACpBR,SAAUc,S,GAzEA1F,c,6jBCFjB,IAAMG,GACiB,6BADjBA,GAEiB,6BAFjBA,GAGc,0BAHdA,GAKkB,8BALlBA,GAMkB,8BANlBA,GAOe,2BAPfA,GASoB,gCATpBA,GAUoB,gCAVpBA,GAWmB,+BAGnByF,IAAgB,mBAC1B3F,EAD0B,MAEtBC,EAAYD,GAFU,CAGzB5B,KAAM,WAHmB,cAK1B4B,EAL0B,MAMtBC,EAAYD,GANU,CAOzB5B,KAAM,WAPmB,cAS1B4B,EAT0B,MAUtBC,EAAYD,GAVU,CAWzB5B,KAAM,YAXmB,cAa1B4B,EAb0B,MActBC,EAAYD,GAdU,CAezB5B,KAAM,WAfmB,cAiB1B4B,EAjB0B,MAkBtBC,EAAYD,GAlBU,CAmBzB5B,KAAM,WAnBmB,cAqB1B4B,EArB0B,MAsBtBC,EAAYD,GAtBU,CAuBzB5B,KAAM,UAvBmB,cAyB1B4B,EAzB0B,MA0BtBC,EAAYD,GA1BU,CA2BzB5B,KAAM,WA3BmB,cA6B1B4B,EA7B0B,MA8BtBC,EAAYD,GA9BU,CA+BzB5B,KAAM,YA/BmB,cAiC1B4B,EAjC0B,MAkCtBC,EAAYD,GAlCU,CAmCzB5B,KAAM,WAnCmB,cAqC1B4B,EArC0B,MAsCtBC,EAAYD,GAtCU,CAuCzB5B,KAAM,YAvCmB,cAyC1B4B,EAzC0B,MA0CtBC,EAAYD,GA1CU,CA2CzB5B,KAAM,YA3CmB,cA6C1B4B,EA7C0B,MA8CtBC,EAAYD,GA9CU,CA+CzB5B,KAAM,cA/CmB,G,6jBCb7B,IAgBaiH,GAAqB,SAAAvG,GAAM,OACtC,SAAA0B,GACEA,EAlBkC,CACpCpC,KAAM8B,KVKoB,SAAApB,GAAM,OAChC,IAAI2B,SAAQ,SAACC,EAASC,GACpB,IAAM2D,EAAUjE,EAASiC,MAAK,SAAAN,GAAG,OAAIA,EAAIlD,SAAWA,KAEpD8B,YAAW,WACTF,EAAQ4D,KACP,QUQHsB,CAAa9G,GACV+B,MAAK,SAAAyD,GAAO,OAAI9D,EAjBQ,SAAA8D,GAAO,MAAK,CACzClG,KAAM8B,GACNY,QAAS,CACPwD,YAc4BuB,CAAuBvB,OAChDvD,OAAM,SAAAC,GAAK,OAAIR,EAXM,SAAAQ,GAAK,MAAK,CACpC5C,KAAM8B,GACNc,SAS6B8E,CAAoB9E,SAmBtCyE,GAAoB,SAAAnB,GAAO,OACtC,SAAA9D,GACEA,EAlBsC,CACxCpC,KAAM8B,KVXmB,SAAAI,GAAI,OAC7B,IAAIG,SAAQ,SAACC,EAASC,GACpBN,EAAWA,EAAStC,KAAI,SAAAiE,GAAG,OAAKA,EAAIlD,SAAWwB,EAAKxB,OAASwB,EAAO0B,KAEpEpB,YAAW,WACTF,EAAQJ,EAAKxB,UACZ,QUwBHiH,CAAYzB,GACTzD,MAAK,SAAA/B,GACJ0B,EAlB2B,SAAA8D,GAAO,MAAK,CAC7ClG,KAAM8B,GACNY,QAAS,CACPwD,YAea0B,CAA2BlH,IACpC0B,EAAS6E,GAAmBvG,OAE7BiC,OAAM,SAAAC,GAAK,OAAIR,EAdU,SAAAQ,GAAK,MAAK,CACxC5C,KAAM8B,GACNc,SAY6BiF,CAAwBjF,SAG1CoE,GAAiC,iBAAO,CACnDhH,KAAM8B,GACNY,QAAS,KAGEoE,GAAiC,iBAAO,CACnD9G,KAAM8B,GACNY,QAAS,KAGE4E,GAAiC,SAAApB,GAAO,MAAK,CACxDlG,KAAM8B,GACNY,QAAQ,MACHwD,KCxED4B,GAAkB,SAAA/E,GAAK,OAAIA,EAAMmD,SAEjCpD,GAAoB,SAAAC,GAAK,OAAIA,EAAM5C,WAEnC6C,GAAgB,SAAAD,GAAK,OAAIA,EAAMH,OAE/BmF,GAAoB,SAAAhF,GAAK,OAAIA,EAAMsC,WAEnC2C,GAAoB,SAAAjF,GAAK,OAAIA,EAAMkF,WAEnCC,GAAiB,SAAAnF,GAAK,OAAIG,OAAOC,OAAOJ,EAAMoD,SAE9CgC,GAAuB,SAAApF,GAAK,OAAIA,EAAMqD,cAY7BvB,GAVS,SAAC,GAAD,IAAkB9B,EAAlB,EAAGqF,cAAH,MAA+B,CACrDlC,QAAS4B,GAAgB/E,GACzB5C,UAAW2C,GAAkBC,GAC7BH,MAAOI,GAAcD,GACrBsC,UAAW0C,GAAkBhF,GAC7BkF,UAAWD,GAAkBjF,GAC7BoD,OAAQ+B,GAAenF,GACvBqD,aAAc+B,GAAqBpF,KCd/BgC,GAAcC,YAAQH,GAAiBI,GAO9BoD,GALWlD,kBACxBC,IACAL,GAFwBI,CAGxBrE,ICIawH,I,MATH,kBACV,yBAAKpJ,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqJ,KAAK,IAAIC,OAAK,EAACC,UAAWvD,KACjC,kBAAC,IAAD,CAAOqD,KAAK,WAAWE,UAAWJ,S,+kBCJxC,IAAMK,GAAe,CACnBxI,SAAU,GACVC,WAAW,EACXyC,MAAO,KACPxC,QAAS2B,EACTjD,WAAY,CACVY,MfyBsB,CACxB,CACEI,GAAI,UACJC,MAAO,gDACPX,QAAS,OACTuF,UAAW,OAEb,CACE7E,GAAI,WACJC,MAAO,gDACPX,QAAS,OACTuF,UAAW,QAEb,CACE7E,GAAI,cACJC,MAAO,iGACPX,QAAS,WACTuF,UAAW,OAEb,CACE7E,GAAI,eACJC,MAAO,iGACPX,QAAS,WACTuF,UAAW,Se/CXvF,QAAS,eAEXL,YAAa,CACXW,MfgDuB,CACzB,CACEI,GAAI,SACJC,MAAO,wCAET,CACED,GAAI,eACJC,MAAO,mCetDPX,QAAS,UAEXJ,aAAc,IAwDD2J,GArDS,WAAmC,IAAlC5F,EAAiC,uDAAzB2F,GAAcE,EAAW,uCAChD5I,EAAyB4I,EAAzB5I,KAAM0C,EAAmBkG,EAAnBlG,QAASE,EAAUgG,EAAVhG,MAEvB,OAAQ5C,GACN,KAAK8B,EACH,OAAO,MACFiB,EADL,CAEE5C,WAAW,IAGf,KAAK2B,EACH,OAAO,MACFiB,EADL,CAEE7C,SAAUwC,EAAQxC,SAClBC,WAAW,IAGf,KAAK2B,EACH,OAAO,MACFiB,EADL,CAEE5C,WAAW,EACXyC,UAGJ,KAAKd,EACH,OAAO,MACFiB,EADL,CAEEjE,WAAW,MACNiE,EAAMjE,WADD,CAERM,QAASsD,EAAQtD,YAIvB,KAAK0C,EACH,OAAO,MACFiB,EADL,CAEEhE,YAAY,MACPgE,EAAMhE,YADA,CAETK,QAASsD,EAAQtD,YAIvB,KAAK0C,EACH,OAAO,MACFiB,EADL,CAEE/D,aAAc0D,EAAQ1D,eAG1B,QACE,OAAO+D,I,6jBClEb,IAAM2F,GAAe,CACnBxC,QAAS,GACT/F,WAAW,EACXyC,MAAO,KACPyC,WAAW,EACX4C,UAAW,GACX9B,OAAQoB,GACRnB,aNyD0B,CAC1ByC,IAAK,CACH,CACE9I,MAAO,6CACPN,MAAO,QAET,CACEM,MAAO,6CACPN,MAAO,WAGXqJ,UAAW,CACT,CACE/I,MAAO,eACPN,OAAO,GAET,CACEM,MAAO,qBACPN,OAAO,IAGXsJ,OAAQ,CACN,CACEhJ,MAAO,UACPN,MAAO,oDAET,CACEM,MAAO,UACPN,MAAO,wCAET,CACEM,MAAO,YACPN,MAAO,oDAET,CACEM,MAAO,aACPN,MAAO,eAGXuJ,aAAc,CACZ,CACEjJ,MAAO,yCACPN,MAAO,KAET,CACEM,MAAO,yCACPN,MAAO,KAET,CACEM,MAAO,yCACPN,MAAO,KAET,CACEM,MAAO,yCACPN,MAAO,KAET,CACEM,MAAO,oDACPN,MAAO,WMpDEwJ,GA5DS,WAAmC,IAAlClG,EAAiC,uDAAzB2F,GAAcE,EAAW,uCAChD5I,EAAyB4I,EAAzB5I,KAAM0C,EAAmBkG,EAAnBlG,QAASE,EAAUgG,EAAVhG,MAEvB,OAAQ5C,GACN,KAAK8B,GACH,OAAO,MACFiB,EADL,CAEE5C,WAAW,IAGf,KAAK2B,GACH,OAAO,MACFiB,EADL,CAEEmD,QAASxD,EAAQwD,QACjB/F,WAAW,EACX8H,UAAU,MACLvF,EAAQwD,WAIjB,KAAKpE,GACH,OAAO,MACFiB,EADL,CAEE5C,WAAW,EACXyC,UAGF,KAAKd,GACH,OAAO,MACFiB,EADL,CAEEsC,WAAW,EACX4C,UAAU,MACLlF,EAAMmD,WAIf,KAAKpE,GACH,OAAO,MACFiB,EADL,CAEEsC,WAAW,EACXa,QAAQ,MACHnD,EAAMkF,WAEXA,UAAW,KAGf,KAAKnG,GACH,OAAO,MACFiB,EADL,CAEEmD,QAAQ,MACHnD,EAAMmD,QADJ,eAEJxD,EAAQ+D,UAAY/D,EAAQnD,eAIrC,QACE,OAAOwD,ICpEEmG,6BAAgB,CAC7BpE,cAAe6D,GACfP,cAAea,KCKFE,GALDC,sBACZC,GACAC,+BAAoBC,0BAAgBC,QCFtCC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,GAAD,OAEFQ,SAASC,eAAe,W","file":"static/js/main.cb6264d6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Toolbar = ({\n  sortParams,\n  groupParams,\n  searchString,\n  onParamsChange\n}) => {\n  const handleSortChange = event => {\n    onParamsChange({\n      fieldId: 'sort',\n      fieldValue: event.target.value,\n    });\n  };\n\n  const handleGroupChange = event => {\n    onParamsChange({\n      fieldId: 'group',\n      fieldValue: event.target.value,\n    });\n  };\n\n  const handleSearchChange = event => {\n    onParamsChange({\n      fieldId: 'search',\n      fieldValue: event.target.value,\n    });\n  };\n\n  return (\n    <div className='toolbar'>\n      <div className='toolbar__item'>\n        <label className='toolbar__item-label'>Сортировка:</label>\n        <select defaultValue={sortParams.fieldId} onChange={handleSortChange}>\n          {\n            sortParams.items.map(item => \n              <option key={item.id} value={item.id}>{item.label}</option>\n            )\n          }\n        </select>\n      </div>\n\n      <div className='toolbar__item'>\n        <label className='toolbar__item-label'>Группировка:</label>\n        <select defaultValue={groupParams.fieldId} onChange={handleGroupChange}>\n          {\n            groupParams.items.map(item => \n              <option key={item.id} value={item.id}>{item.label}</option>\n            )\n          }\n        </select>\n      </div>\n\n      <div className='toolbar__item'>\n        <label className='toolbar__item-label'>Поиск:</label>\n        <input type='text' value={searchString} onChange={handleSearchChange} />\n      </div>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  sortParams: PropTypes.shape({\n    items: PropTypes.array,\n    fieldId: PropTypes.string,\n  }),\n  groupParams: PropTypes.shape({\n    items: PropTypes.array,\n    fieldId: PropTypes.string,\n  }),\n  searchString: PropTypes.string,\n};\n\nexport default Toolbar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst DogsTable = ({\n  dogsList,\n  isLoading,\n  columns,\n  onRowClick,\n}) => {\n  const renderRow = item => {\n    const handleClick = () => onRowClick({ id: item.chipId });\n\n    return (\n      <div className='dogs-table__row' onClick={handleClick} key={item.chipId}>\n        {\n          columns.map((field, index) => (\n            <div className=\"dogs-table__cell\" key={index}>{item[field.id]}</div>\n          ))\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div className='dogs-table'>\n      <div className='dogs-table__row _head'>\n        {\n          columns.map((field, index) => (\n            <div className=\"dogs-table__cell\" key={index}>{field.text}</div>\n          ))\n        }\n      </div>\n      \n      {\n        isLoading \n          ? <div className='loading'>loading...</div>\n          : dogsList.map(renderRow) // внутрь renderRow придут 3 аргумента из метода .map() - item, index, array\n      }      \n    </div>\n  )\n};\n\nDogsTable.propTypes = {\n  dogsList: PropTypes.array,\n  isLoading: PropTypes.bool,\n  columns: PropTypes.array,\n  onRowClick: PropTypes.func,\n};\n\nexport default DogsTable;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DogsTable from '../dogsTable';\n\nimport './styles.css';\n\nconst DogsGroup = ({\n  title,\n  items,\n  isLoading,\n  columns,\n  onItemClick,\n}) => (\n  <div className=\"group\">\n    {title && <div className=\"title\">{title}</div>}\n\n    <DogsTable\n      dogsList={items}\n      isLoading={isLoading}\n      columns={columns}\n      onRowClick={onItemClick}\n    />\n  </div>\n  );\n\nDogsGroup.propTypes = {\n  title: PropTypes.string,\n  items: PropTypes.array,\n  isLoading: PropTypes.bool,\n  columns: PropTypes.array,\n  onItemClick: PropTypes.func,\n};\n\nexport default DogsGroup;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '../../../components/dogsListToolbar';\nimport DogsGroup from '../../../components/dogsGroup';\n\nimport './styles.css';\n\nclass Container extends Component {\n  componentDidMount() {\n    this.props.fetchDogsListAction();\n  };\n\n  handleItemClick = ({ id }) => {\n    const { history } = this.props;\n    \n    if (id) {\n      history.push(`/dog/${id}`);\n    }\n  };\n  \n  handleToolbarParamsChange = ({ fieldId, fieldValue }) => {\n    switch (fieldId) {\n      case 'sort':\n        this.props.dogsListChangeSortAction(fieldValue);\n        break;\n\n      case 'group':\n        this.props.dogsListChangeGroupAction(fieldValue);\n        break;\n\n      case 'search':\n        this.props.dogsListChangeSearchAction(fieldValue);\n        break;\n\n      default:\n        break;\n    };\n  };\n\n  render() {\n    const {\n      dogsGroups,\n      isLoading,\n      columns,\n      sortParams,\n      groupParams,\n      searchString,\n    } = this.props;\n    \n    return (\n      <>\n        <Toolbar\n          sortParams={sortParams}\n          groupParams={groupParams}\n          searchString={searchString}\n          onParamsChange={this.handleToolbarParamsChange}\n        />\n        {\n          isLoading\n            ? <div className='loading'>loading...</div>\n            : dogsGroups.map((group, index) => (\n              <DogsGroup\n                key={index}\n                {...group}\n                isLoading={isLoading}\n                columns={columns}\n                onItemClick={this.handleItemClick}\n              />\n            ))\n        }\n      </>\n    );\n  }\n};\n\nContainer.propTypes = {\n  dogsGroups: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    items: PropTypes.array,\n  })),\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  columns: PropTypes.array,\n  sortParams: PropTypes.object,\n  groupParams: PropTypes.object,\n  searchString: PropTypes.string,\n\n  fetchDogsListAction: PropTypes.func,\n  dogsListChangeSortAction: PropTypes.func,\n  dogsListChangeGroupAction: PropTypes.func,\n  dogsListChangeSearchAction: PropTypes.func,\n};\n\nexport default Container;","export const DOGS_FIELDS_ID = {\n  NAME: 'name',\n  BIRTHDAY: 'birthday',\n  SEX: 'sex',\n  ROW: 'row',\n  AVAIRY: 'avairy',\n  CATALOG_LINK: 'catalogLink',\n  CHIP_ID: 'chipId',\n  ISWALKING: 'isWalking',\n  SHELTERDAY: 'shelterDay',\n  STATUS: 'status',\n  WALKING_GROUP: 'walkingGroup',\n  DESCRIPTION: 'description',\n};\n\nexport const DOGS_FIELDS = {\n  [DOGS_FIELDS_ID.NAME]: {\n    id: DOGS_FIELDS_ID.NAME,\n    text: 'Имя',\n  },\n  [DOGS_FIELDS_ID.BIRTHDAY]: {\n    id: DOGS_FIELDS_ID.BIRTHDAY,\n    text: 'Год рождения',\n  },\n  [DOGS_FIELDS_ID.SEX]: {\n    id: DOGS_FIELDS_ID.SEX,\n    text: 'Пол',\n  },\n  [DOGS_FIELDS_ID.ROW]: {\n    id: DOGS_FIELDS_ID.ROW,\n    text: 'Ряд',\n  },\n  [DOGS_FIELDS_ID.AVAIRY]: {\n    id: DOGS_FIELDS_ID.AVAIRY,\n    text: 'Вольер',\n  },\n  [DOGS_FIELDS_ID.CATALOG_LINK]: {\n    id: DOGS_FIELDS_ID.CATALOG_LINK,\n    text: 'Ссылка',\n  },\n  [DOGS_FIELDS_ID.CHIP_ID]: {\n    id: DOGS_FIELDS_ID.CHIP_ID,\n    text: 'ИД',\n  },\n  [DOGS_FIELDS_ID.ISWALKING]: {\n    id: DOGS_FIELDS_ID.ISWALKING,\n    text: 'Гуляет',\n  },\n  [DOGS_FIELDS_ID.SHELTERDAY]: {\n    id: DOGS_FIELDS_ID.SHELTERDAY,\n    text: 'Дата вылова',\n  },\n  [DOGS_FIELDS_ID.STATUS]: {\n    id: DOGS_FIELDS_ID.STATUS,\n    text: 'Статус',\n  },\n  [DOGS_FIELDS_ID.WALKING_GROUP]: {\n    id: DOGS_FIELDS_ID.WALKING_GROUP,\n    text: 'Группа выгула',\n  },\n  [DOGS_FIELDS_ID.DESCRIPTION]: {\n    id: DOGS_FIELDS_ID.DESCRIPTION,\n    text: 'Описание',\n  },\n};","import {\n  DOGS_FIELDS_ID,\n  DOGS_FIELDS,\n} from '../../../constants';\n\nexport const ACTION_TYPES = {\n  DOGS_LIST_GET_DATA_REQUEST: 'DOGS_LIST_GET_DATA_REQUEST',\n  DOGS_LIST_GET_DATA_SUCCESS: 'DOGS_LIST_GET_DATA_SUCCESS',\n  DOGS_LIST_GET_DATA_FAIL: 'DOGS_LIST_GET_DATA_FAIL',\n  \n  DOGS_LIST_CHANGE_SORT: 'DOGS_LIST_CHANGE_SORT',\n  DOGS_LIST_CHANGE_GROUP: 'DOGS_LIST_CHANGE_GROUP',\n  DOGS_LIST_CHANGE_SEARCH: 'DOGS_LIST_CHANGE_SEARCH',\n};\n\nexport const DOGS_LIST_COLUMNS = {\n  [DOGS_FIELDS_ID.CHIP_ID]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.CHIP_ID],\n    visible: true,\n  },\n  [DOGS_FIELDS_ID.NAME]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.NAME],\n    visible: true,\n  },\n  [DOGS_FIELDS_ID.BIRTHDAY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.BIRTHDAY],\n    visible: true,\n  },\n  [DOGS_FIELDS_ID.AVAIRY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.AVAIRY],\n    visible: true,\n  },\n  [DOGS_FIELDS_ID.SEX]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.SEX],\n    visible: true,\n  },\n};\n\nexport const SORT_TYPES = [\n  {\n    id: 'nameAsc',\n    label: 'Имя (возр)',\n    fieldId: 'name',\n    direction: 'asc',\n  },\n  {\n    id: 'nameDesc',\n    label: 'Имя (убыв)',\n    fieldId: 'name',\n    direction: 'desc',\n  },\n  {\n    id: 'birthdayAsc',\n    label: 'Год рождения (возр)',\n    fieldId: 'birthday',\n    direction: 'asc',\n  },\n  {\n    id: 'birthdayDesc',\n    label: 'Год рождения (убыв)',\n    fieldId: 'birthday',\n    direction: 'desc',\n  },\n];\n\nexport const GROUP_TYPES = [\n  {\n    id: 'avairy',\n    label: 'Вольер',\n  },\n  {\n    id: 'walkingGroup',\n    label: 'Выгул',\n  },\n];","import data from \"./data.json\";\n\nlet dogsData = [...data.list];\n\nexport const fetchDogsList = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(dogsData);\n    }, 200);\n  });\n};\n\nexport const fetchDogById = chipId =>\n  new Promise((resolve, reject) => {\n    const dogData = dogsData.find(dog => dog.chipId === chipId);\n\n    setTimeout(() => {\n      resolve(dogData);\n    }, 200);\n  });\n\nexport const saveDogData = data =>\n  new Promise((resolve, reject) => {\n    dogsData = dogsData.map(dog => (dog.chipId === data.chipId ? data : dog));\n\n    setTimeout(() => {\n      resolve(data.chipId);\n    }, 200);\n  });","import { ACTION_TYPES } from './constants';\nimport { fetchDogsList } from '../../../backend';\n\nconst dogsListGetDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_REQUEST,\n});\n\nconst dogsListGetDataSuccess = dogsList => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_SUCCESS,\n  payload: {\n    dogsList,\n  },\n});\n\nconst dogsListGetDataFail = error => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_FAIL,\n  error,\n});\n\nexport const fetchDogsListAction = () => dispatch => {\n  dispatch(dogsListGetDataRequest());\n  \n  fetchDogsList()\n    .then(data => dispatch(dogsListGetDataSuccess(data)))\n    .catch(error => dispatch(dogsListGetDataFail(error)));\n};\n\nexport const dogsListChangeSortAction = fieldId => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_SORT,\n  payload: {\n    fieldId,\n  },\n});\n\nexport const dogsListChangeGroupAction = fieldId => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_GROUP,\n  payload: {\n    fieldId,\n  },\n});\n\nexport const dogsListChangeSearchAction = searchString => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_SEARCH,\n  payload: {\n    searchString,\n  },\n});","import { createSelector } from 'reselect';\n\nimport {\n  filterDogsList,\n  sortDogsList,\n  groupDogsList,\n} from './utils';\n\nconst dogsListSelector = state => state.dogsList;\n\nconst isLoadingSelector = state => state.isLoading;\n\nconst errorSelector = state => state.error;\n\nconst columnsSelector = state => Object.values(state.columns).filter(column => column.visible);\n\nconst sortParamsSelector = state => state.sortParams;\n\nconst groupParamsSelector = state => state.groupParams;\n\nconst searchSelector = state => state.searchString;\n\nconst dogsGroupReselector = createSelector(\n  dogsListSelector,\n  sortParamsSelector,\n  groupParamsSelector,\n  searchSelector,\n  (dogsList, sortParams, groupParams, searchString) => {\n    let result = dogsList;\n\n    if (searchString) {\n      result = filterDogsList(result, searchString);\n    };\n\n    result = sortDogsList(result, sortParams);\n\n    result = groupDogsList(result, groupParams);\n\n    return result;\n  }\n);\n\nconst mapStateToProps = ({ dogsListState: state }) => ({\n  dogsGroups: dogsGroupReselector(state),\n  isLoading: isLoadingSelector(state),\n  error: errorSelector(state),\n  columns: columnsSelector(state),\n  sortParams: sortParamsSelector(state),\n  groupParams: groupParamsSelector(state),\n  searchString: searchSelector(state),\n});\n\nexport default mapStateToProps;","export const filterDogsList = (dogsList, searchString) =>\n  dogsList.filter(dog => {\n    const name = dog.name.toLowerCase();\n    const subString = searchString.toLowerCase();\n    \n    return name.includes(subString);\n  });\n\nexport const sortDogsList = (dogsList, sortParams) => {\n  const { items, fieldId: sortTypeId } = sortParams;\n  const sortType = items.find(item => item.id === sortTypeId);\n  const { fieldId, direction } = sortType || {};\n\n  if (direction === 'asc') {\n    return dogsList.sort((a, b) => a[fieldId].localeCompare(b[fieldId]));\n  };\n\n  return dogsList.sort((a, b) => b[fieldId].localeCompare(a[fieldId]));\n};\n\nexport const groupDogsList = (dogsList, groupParams) => {\n  const { items, fieldId } = groupParams;\n  const groupType = items.find(item => item.id === fieldId);\n  const { id, label } = groupType || {};\n\n  let result = [];\n\n  dogsList.forEach(item => {\n    const title = `${label}: ${item[id]}`;\n    const group = result.find(resultItem => resultItem.title === title);\n\n    group\n      ? group.items.push(item)\n      : result.push({\n          title: title,\n          items: [item],\n        });\n  });\n\n  return result.sort((a, b) => a.title.localeCompare(b.title));\n};","import { connect } from \"react-redux\";\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport Container from './container';\nimport * as actions from './action-creators';\nimport mapStateToProps from './selectors';\n\nconst withConnect = connect(mapStateToProps, actions);\n\nconst DogsListContainer = compose(\n  withRouter,\n  withConnect,\n)(Container);\n\nexport default DogsListContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Toolbar = ({\n  isEditing,\n  onToolbarItemClick,\n}) => {\n  const onBackClick = () => onToolbarItemClick({ id: 'back' });\n  const onEditClick = () => onToolbarItemClick({ id: 'edit' });\n  \n  return (\n    <div className=\"toolbar\">\n      <button className=\"toolbar__button\" onClick={onBackClick}>Назад</button>\n      <button className=\"toolbar__button\" onClick={onEditClick} disabled={isEditing}>Изменить</button>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  onToolbarItemClick: PropTypes.func,\n};\n\nexport default Toolbar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Input = ({ name, value, onChange }) => (\n  <input\n    className='dog-form__field'\n    type='text'\n    name={name}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nconst Textarea = ({ name, value, onChange }) => (\n  <textarea\n    className='dog-form__field'\n    name={name}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nconst Select = ({ name, value, options, onChange }) => (\n  <select\n    className='dog-form__field'\n    name={name}\n    value={value}\n    onChange={onChange}\n  >\n    {\n      options.map((option, index) =>\n        <option key={index} value={option.value}>{option.label}</option>\n      )\n    }\n  </select>\n);\n\nconst DogFormParam = ({\n  isEditing,\n  fieldId,\n  label,\n  value,\n  type,\n  options,\n  onChange,\n}) => {\n  const renderFieldEditMode = () => {\n    switch (type) {\n      case 'input':\n      case 'link':\n        return <Input name={fieldId} value={value} onChange={onChange} />\n    \n      case 'textarea':\n        return <Textarea name={fieldId} value={value} onChange={onChange} />\n    \n      case 'select':\n        return <Select name={fieldId} value={value} options={options} onChange={onChange} />\n    \n      default:\n        break;\n    }\n  };\n\n  const renderFieldViewMode = () => (\n    (type === 'link')\n      ? <a href={value}>{value}</a>\n      : <div>{String(value)}</div>\n  );\n\n  return(\n    <div className=\"dog-form__param\">\n      <label className=\"dog-form__label\">{label}</label>\n      {\n        isEditing\n        ? renderFieldEditMode()\n        : renderFieldViewMode()\n      }\n    </div>\n  );\n};\n\nDogFormParam.propTypes = {\n  isEditing: PropTypes.bool,\n  fieldId: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  type: PropTypes.string,\n  options: PropTypes.array,\n  onChange: PropTypes.func,\n};\n\nexport default DogFormParam;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DogFormParam from '../dogFormParam';\n\nimport './styles.css';\n\nconst DogForm = ({\n  dogData,\n  isEditing,\n  fields,\n  dictionaries,\n  onDataChange,\n  onButtonClick,\n  onSubmit,\n}) => {\n  const handleChange = ({ target: { name, value } }) => onDataChange({\n    fieldName: name,\n    fieldValue: value,\n  });\n\n  const onCancelClick = () => onButtonClick({ id: 'cancel' });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(dogData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"dog-form\">\n        <div className=\"dog-form__image\"></div>\n        \n        <div className=\"dog-form__data\">\n            {\n              fields.map(({ id: fieldId, text: fieldLabel, type: fieldType }, index) => \n                <DogFormParam\n                  key={index}\n                  isEditing={isEditing}\n                  fieldId={fieldId} \n                  label={fieldLabel}\n                  value={dogData[fieldId]}\n                  type={fieldType}\n                  options={dictionaries[fieldId]}\n                  onChange={handleChange}\n                />\n              )\n            }\n        </div>\n      </div>\n\n      {\n        isEditing &&\n          <>\n            <button className=\"dog-form__button\" onClick={onCancelClick}>Отменить</button>\n            <button className=\"dog-form__button\" type=\"submit\">Сохранить</button>\n          </>\n      }\n    </form>\n\n  );\n};\n\nDogForm.propTypes = {\n  dogData: PropTypes.object,\n  isEditing: PropTypes.bool,\n  fields: PropTypes.array,\n  dictionaries: PropTypes.object,\n  onDataChange: PropTypes.func,\n  onButtonClick: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default DogForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '../../../components/dogsItemToolbar';\nimport DogForm from '../../../components/dogForm';\n\nimport './styles.css';\n\nclass Container extends Component {\n  componentDidMount() {\n    const { fetchDogDataAction, location } = this.props;\n    const dogChipId = location.pathname.substr(5);\n\n    fetchDogDataAction(dogChipId);\n  };\n\n  handleGoBack = () => {\n    const {\n      history,\n      isEditing,\n      dogsItemChangeModeToViewAction,\n    } = this.props;\n\n    if (isEditing) {\n      dogsItemChangeModeToViewAction();\n    }\n    \n    history.push('/');\n  };\n\n  handleButtonClick = ({ id }) => {\n    switch (id) {\n      case 'back':\n        this.handleGoBack();\n        break;\n\n      case 'edit':\n        this.props.dogsItemChangeModeToEditAction();\n        break;\n\n      case 'cancel':\n        this.props.dogsItemChangeModeToViewAction();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      dogData,\n      isLoading,\n      error,\n      isEditing,\n      fields,\n      dictionaries,\n      saveDogDataAction,\n      dogsItemChangeFieldValueAction,\n    } = this.props;\n\n    if (error) {\n      return `Error: ${error}`;\n    }\n\n    return (\n      <>\n        <Toolbar\n          isEditing={isEditing}\n          onToolbarItemClick={this.handleButtonClick}\n        />\n        {\n          isLoading\n          ? <div className='loading'>loading...</div>\n          : <DogForm\n              dogData={dogData}\n              isEditing={isEditing}\n              fields={fields}\n              dictionaries={dictionaries}\n              onDataChange={dogsItemChangeFieldValueAction}\n              onButtonClick={this.handleButtonClick}\n              onSubmit={saveDogDataAction}\n            />\n        }\n      </>\n    );\n  }\n};\n\nContainer.propTypes = {\n  dogData: PropTypes.object,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  isEditing: PropTypes.bool,\n  savedCopy: PropTypes.object,\n  fields: PropTypes.array,\n  dictionaries: PropTypes.object,\n\n  fetchDogDataAction: PropTypes.func,\n  saveDogDataAction: PropTypes.func,\n  dogsItemChangeModeToViewAction: PropTypes.func,\n  dogsItemChangeModeToEditAction: PropTypes.func,\n  dogsItemChangeFieldValueAction: PropTypes.func,\n};\n\nexport default Container;","import {\n  DOGS_FIELDS_ID,\n  DOGS_FIELDS,\n} from '../../../constants';\n\nexport const ACTION_TYPES = {\n  DOGS_ITEM_GET_DATA_REQUEST: 'DOGS_ITEM_GET_DATA_REQUEST',\n  DOGS_ITEM_GET_DATA_SUCCESS: 'DOGS_ITEM_GET_DATA_SUCCESS',\n  DOGS_ITEM_GET_DATA_FAIL: 'DOGS_ITEM_GET_DATA_FAIL',\n\n  DOGS_ITEM_SAVE_DATA_REQUEST: 'DOGS_ITEM_SAVE_DATA_REQUEST',\n  DOGS_ITEM_SAVE_DATA_SUCCESS: 'DOGS_ITEM_SAVE_DATA_SUCCESS',\n  DOGS_ITEM_SAVE_DATA_FAIL: 'DOGS_ITEM_SAVE_DATA_FAIL',\n\n  DOGS_ITEM_CHANGE_MODE_TO_EDIT: 'DOGS_ITEM_CHANGE_MODE_TO_EDIT',\n  DOGS_ITEM_CHANGE_MODE_TO_VIEW: 'DOGS_ITEM_CHANGE_MODE_TO_VIEW',\n  DOGS_ITEM_CHANGE_FIELD_VALUE: 'DOGS_ITEM_CHANGE_FIELD_VALUE',\n};\n\nexport const DOGS_ITEM_FIELDS = {\n  [DOGS_FIELDS_ID.NAME]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.NAME],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.BIRTHDAY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.BIRTHDAY],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.SEX]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.SEX],\n    type: 'select',\n  },\n  [DOGS_FIELDS_ID.ROW]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.ROW],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.AVAIRY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.AVAIRY],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.CATALOG_LINK]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.CATALOG_LINK],\n    type: 'link',\n  },\n  [DOGS_FIELDS_ID.CHIP_ID]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.CHIP_ID],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.ISWALKING]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.ISWALKING],\n    type: 'select',\n  },\n  [DOGS_FIELDS_ID.SHELTERDAY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.SHELTERDAY],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.STATUS]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.STATUS],\n    type: 'select',\n  },\n  [DOGS_FIELDS_ID.WALKING_GROUP]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.WALKING_GROUP],\n    type: 'select',\n  },\n  [DOGS_FIELDS_ID.DESCRIPTION]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.DESCRIPTION],\n    type: 'textarea',\n  },\n}\n\nexport const DICTIONARIES = {\n  sex: [\n    {\n      label: 'мужской',\n      value: 'male',\n    },\n    {\n      label: 'женский',\n      value: 'female',\n    },\n  ],\n  isWalking: [\n    {\n      label: 'да',\n      value: true,\n    },\n    {\n      label: 'нет',\n      value: false,\n    },\n  ],\n  status: [\n    {\n      label: 'healthy',\n      value: 'здоровая',\n    },\n    {\n      label: 'hospice',\n      value: 'хоспис',\n    },\n    {\n      label: 'insulator',\n      value: 'изолятор',\n    },\n    {\n      label: 'supervised',\n      value: 'supervised',\n    },\n  ],\n  walkingGroup: [\n    {\n      label: 'Выгул №1',\n      value: '1',\n    },\n    {\n      label: 'Выгул №2',\n      value: '2',\n    },\n    {\n      label: 'Выгул №3',\n      value: '3',\n    },\n    {\n      label: 'Выгул №4',\n      value: '4',\n    },\n    {\n      label: 'Не гуляет',\n      value: 'null',\n    },\n  ],\n};","import { ACTION_TYPES } from './constants';\nimport {\n  fetchDogById,\n  saveDogData,\n} from '../../../backend';\n\nconst dogsItemGetDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_REQUEST,\n});\n\nconst dogsItemGetDataSuccess = dogData => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_SUCCESS,\n  payload: {\n    dogData,\n  },\n});\n\nconst dogsItemGetDataFail = error => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_FAIL,\n  error,\n});\n\nexport const fetchDogDataAction = chipId =>\n  dispatch => {\n    dispatch(dogsItemGetDataRequest());\n\n    fetchDogById(chipId)\n      .then(dogData => dispatch(dogsItemGetDataSuccess(dogData)))\n      .catch(error => dispatch(dogsItemGetDataFail(error)));\n  };\n\nconst dogsItemSaveDogDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_REQUEST,\n});\n\nconst dogsItemSaveDogDataSuccess = dogData => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_SUCCESS,\n  payload: {\n    dogData,\n  },\n});\n\nconst dogsItemSaveDogDataFail = error => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_FAIL,\n  error,\n});\n\nexport const saveDogDataAction = dogData =>\n  dispatch => {\n    dispatch(dogsItemSaveDogDataRequest());\n\n    saveDogData(dogData)\n      .then(chipId => {\n        dispatch(dogsItemSaveDogDataSuccess(chipId));\n        dispatch(fetchDogDataAction(chipId));\n      })\n      .catch(error => dispatch(dogsItemSaveDogDataFail(error)));\n  };\n\nexport const dogsItemChangeModeToEditAction = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_EDIT,\n  payload: {},\n});\n\nexport const dogsItemChangeModeToViewAction = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_VIEW,\n  payload: {},\n});\n  \nexport const dogsItemChangeFieldValueAction = dogData => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_FIELD_VALUE,\n  payload: {\n    ...dogData,\n  },\n});","const dogDataSelector = state => state.dogData;\n\nconst isLoadingSelector = state => state.isLoading;\n\nconst errorSelector = state => state.error;\n\nconst isEditingSelector = state => state.isEditing;\n\nconst savedCopySelector = state => state.savedCopy;\n\nconst fieldsSelector = state => Object.values(state.fields);\n\nconst dictionariesSelector = state => state.dictionaries;\n\nconst mapStateToProps = ({ dogsItemState: state }) => ({\n  dogData: dogDataSelector(state),\n  isLoading: isLoadingSelector(state),\n  error: errorSelector(state),\n  isEditing: isEditingSelector(state),\n  savedCopy: savedCopySelector(state),\n  fields: fieldsSelector(state),\n  dictionaries: dictionariesSelector(state),\n});\n\nexport default mapStateToProps;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport Container from './container';\nimport * as actions from './action-creators';\nimport mapStateToProps from './selectors';\n\nconst withConnect = connect(mapStateToProps, actions);\n\nconst DogsItemContainer = compose(\n  withRouter, \n  withConnect,\n)(Container);\n\nexport default DogsItemContainer;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport DogsListContainer from '../../containers/dogs/list';\nimport DogsItemContainer from '../../containers/dogs/item';\n\nimport './styles.css';\n\nconst App = () => (\n  <div className='main-wrapper'>\n    <Router>\n      <Route path=\"/\" exact component={DogsListContainer} />\n      <Route path=\"/dog/:id\" component={DogsItemContainer} />\n    </Router>\n  </div>\n  );\n\nexport default App;","import {\n  ACTION_TYPES,\n  DOGS_LIST_COLUMNS,\n  SORT_TYPES,\n  GROUP_TYPES,\n} from './constants';\n\nconst initialState = {\n  dogsList: [],\n  isLoading: false,\n  error: null,\n  columns: DOGS_LIST_COLUMNS,\n  sortParams: {\n    items: SORT_TYPES,\n    fieldId: 'birthdayAsc',\n  },\n  groupParams: {\n    items: GROUP_TYPES,\n    fieldId: 'avairy',\n  },\n  searchString: '',\n};\n\nconst dogsListReducer = (state = initialState, action) => {\n  const { type, payload, error } = action;\n\n  switch (type) {\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        dogsList: payload.dogsList,\n        isLoading: false,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_SORT:\n      return {\n        ...state,\n        sortParams: {\n          ...state.sortParams,\n          fieldId: payload.fieldId,\n        },\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_GROUP:\n      return {\n        ...state,\n        groupParams: {\n          ...state.groupParams,\n          fieldId: payload.fieldId,\n        },\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_SEARCH:\n      return {\n        ...state,\n        searchString: payload.searchString,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dogsListReducer;","import {\n  ACTION_TYPES,\n  DOGS_ITEM_FIELDS,\n  DICTIONARIES,\n} from './constants';\n\nconst initialState = {\n  dogData: {},\n  isLoading: false,\n  error: null,\n  isEditing: false,\n  savedCopy: {},\n  fields: DOGS_ITEM_FIELDS,\n  dictionaries: DICTIONARIES,\n};\n\nconst dogsItemReducer = (state = initialState, action) => {\n  const { type, payload, error } = action;\n\n  switch (type) {\n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        dogData: payload.dogData,\n        isLoading: false,\n        savedCopy: {\n          ...payload.dogData,\n        },\n      };\n    \n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error,\n      };\n      \n      case ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_EDIT:\n        return {\n          ...state,\n          isEditing: true,\n          savedCopy: {\n            ...state.dogData,\n          },\n        };\n\n      case ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_VIEW:\n        return {\n          ...state,\n          isEditing: false,\n          dogData: {\n            ...state.savedCopy,\n          },\n          savedCopy: {},\n        };\n\n      case ACTION_TYPES.DOGS_ITEM_CHANGE_FIELD_VALUE:\n        return {\n          ...state,\n          dogData: {\n            ...state.dogData,\n            [payload.fieldName]: payload.fieldValue,\n          },\n        };\n\n    default:\n      return state;\n  }\n};\n\nexport default dogsItemReducer;","import { combineReducers } from 'redux';\nimport dogsListReducer from '../containers/dogs/list/reducer';\nimport dogsItemReducer from '../containers/dogs/item/reducer';\n\nexport default combineReducers({\n  dogsListState: dogsListReducer,\n  dogsItemState: dogsItemReducer,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './root-reducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}