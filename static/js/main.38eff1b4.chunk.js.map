{"version":3,"sources":["components/dogsListToolbar/index.jsx","components/dogsTable/index.jsx","components/dogsGroup/index.jsx","containers/dogs/list/container.jsx","containers/dogs/list/constants.js","backend/index.js","containers/dogs/list/action-creators.js","containers/dogs/list/selectors.js","containers/dogs/list/utils.js","containers/dogs/list/index.js","components/dogsItemToolbar/index.jsx","components/dogFormParam/index.js","components/dogForm/index.jsx","containers/dogs/item/container.jsx","containers/dogs/item/constants.js","containers/dogs/item/action-creators.js","containers/dogs/item/selectors.js","containers/dogs/item/index.js","components/app/index.js","containers/dogs/list/reducer.js","containers/dogs/item/reducer.js","store/root-reducer.js","store/index.js","index.js"],"names":["Toolbar","props","sortParams","groupParams","searchString","onParamsChange","className","defaultValue","fieldId","onChange","event","fieldValue","target","value","items","map","item","key","id","label","type","DogsTable","dogsList","isLoading","columns","onRowClick","field","index","text","onClick","chipId","DogsGroup","title","onItemClick","Container","handleItemClick","history","push","handleToolbarParamsChange","param","dogsListChangeSortAction","dogsListChangeGroupAction","dogsListChangeSearchAction","this","fetchDogsListAction","dogsGroups","group","Component","ACTION_TYPES","dogsData","data","list","dispatch","Promise","resolve","reject","setTimeout","then","payload","catch","error","dogsListGetDataFail","dogsGroupsSelector","state","result","filter","dog","name","toLowerCase","subString","includes","filterDogsList","find","forEach","resultItem","sort","a","b","localeCompare","groupDogsList","sortTypeId","direction","sortDogsList","isLoadingSelector","errorSelector","columnsSelector","column","visible","sortParamsSelector","groupParamsSelector","searchSelector","mapStateToProps","dogsListState","withConnect","connect","actions","DogsListContainer","compose","withRouter","isEditing","onToolbarItemClick","Input","Textarea","Select","options","option","DogFormParam","renderFieldEditMode","href","String","DogForm","dogData","fields","dictionaries","onDataChange","onSubmit","handleChange","fieldName","preventDefault","fieldLabel","fieldType","handleGoBack","dogsItemChangeModeToViewAction","handleToolbarItemClick","dogsItemChangeModeToEditAction","fetchDogDataAction","location","pathname","substr","saveDogDataAction","dogsItemChangeFieldValueAction","fetchDogById","dogsItemGetDataSuccess","dogsItemGetDataFail","saveDogData","dogsItemSaveDogDataSuccess","dogsItemSaveDogDataFail","dogDataSelector","isEditingSelector","savedCopySelector","savedCopy","fieldsSelector","dictionariesSelector","dogsItemState","DogsItemContainer","App","path","exact","component","initialState","dogsListReducer","action","sex","isWalking","status","walkingGroup","dogsItemReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38eff1b4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Toolbar = (props) => {\n  const {\n    sortParams,\n    groupParams,\n    searchString,\n    onParamsChange\n  } = props;\n\n  const handleSortChange = (event) => {\n    onParamsChange({\n      fieldId: 'sort',\n      fieldValue: event.target.value,\n    });\n  };\n\n  const handleGroupChange = (event) => {\n    onParamsChange({\n      fieldId: 'group',\n      fieldValue: event.target.value,\n    });\n  };\n\n  const handleSearchChange = (event) => {\n    onParamsChange({\n      fieldId: 'search',\n      fieldValue: event.target.value,\n    });\n  };\n\n  return (\n    <div className='toolbar'>\n      <div className='toolbar__item'>\n        <label className='toolbar__item-label'>Сортировка:</label>\n        <select defaultValue={sortParams.fieldId} onChange={handleSortChange}>\n          {\n            sortParams.items.map(item => \n              <option key={item.id} value={item.id}>{item.label}</option>\n            )\n          }\n        </select>\n      </div>\n\n      <div className='toolbar__item'>\n        <label className='toolbar__item-label'>Группировка:</label>\n        <select defaultValue={groupParams.fieldId} onChange={handleGroupChange}>\n          {\n            groupParams.items.map(item => \n              <option key={item.id} value={item.id}>{item.label}</option>\n            )\n          }\n        </select>\n      </div>\n\n      <div className='toolbar__item'>\n        <label className='toolbar__item-label'>Поиск:</label>\n        <input type='text' value={searchString} onChange={handleSearchChange} />\n      </div>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  sortParams: PropTypes.shape({\n    items: PropTypes.array,\n    fieldId: PropTypes.string,\n  }),\n  groupParams: PropTypes.shape({\n    items: PropTypes.array,\n    fieldId: PropTypes.string,\n  }),\n  searchString: PropTypes.string,\n};\n\nexport default Toolbar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst DogsTable = (props) => {\n  const {\n    dogsList,\n    isLoading,\n    columns,\n    onRowClick,\n  } = props;\n\n  const renderRow = (item) => {\n    const handleClick = () => onRowClick({ id: item.chipId });\n\n    return (\n      <div className='dogs-table__row' onClick={handleClick} key={item.chipId}>\n        {\n          columns.map((field, index) => (\n            <div className=\"dogs-table__cell\" key={index}>{item[field.id]}</div>\n          ))\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div className='dogs-table'>\n      <div className='dogs-table__row _head'>\n        {\n          columns.map((field, index) => (\n            <div className=\"dogs-table__cell\" key={index}>{field.text}</div>\n          ))\n        }\n      </div>\n      \n      {\n        isLoading \n          ? <div className='loading'>loading...</div>\n          : dogsList.map(renderRow) // внутрь renderRow придут 3 аргумента из метода .map() - item, index, array\n      }      \n    </div>\n  )\n};\n\nDogsTable.propTypes = {\n  dogsList: PropTypes.array,\n  isLoading: PropTypes.bool,\n  columns: PropTypes.array,\n  onRowClick: PropTypes.func,\n};\n\nexport default DogsTable;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DogsTable from '../dogsTable';\n\nimport './styles.css';\n\nconst DogsGroup = (props) => {\n  const {\n    title,\n    items,\n    isLoading,\n    columns,\n    onItemClick,\n  } = props;\n  \n  return (\n    <div className=\"group\">\n      {title && <div className=\"title\">{title}</div>}\n\n      <DogsTable\n        dogsList={items}\n        isLoading={isLoading}\n        columns={columns}\n        onRowClick={onItemClick}\n      />\n    </div>\n  );\n};\n\nDogsGroup.propTypes = {\n  title: PropTypes.string,\n  items: PropTypes.array,\n  isLoading: PropTypes.bool,\n  columns: PropTypes.array,\n  onItemClick: PropTypes.func,\n};\n\nexport default DogsGroup;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '../../../components/dogsListToolbar';\nimport DogsGroup from '../../../components/dogsGroup';\n\nimport './styles.css';\n\nclass Container extends Component {\n  componentDidMount() {\n    this.props.fetchDogsListAction();\n  };\n\n  handleItemClick = ({ id }) => {\n    const { history } = this.props;\n    \n    if (id) {\n      history.push(`/dog/${id}`);\n    }\n  };\n  \n  handleToolbarParamsChange = (param) => {\n    switch (param.fieldId) {\n      case 'sort':\n        this.props.dogsListChangeSortAction(param.fieldValue);\n        break;\n\n      case 'group':\n        this.props.dogsListChangeGroupAction(param.fieldValue);\n        break;\n\n      case 'search':\n        this.props.dogsListChangeSearchAction(param.fieldValue);\n        break;\n\n      default:\n        break;\n    };\n  };\n\n  render() {\n    const {\n      dogsGroups,\n      isLoading,\n      columns,\n      sortParams,\n      groupParams,\n      searchString,\n    } = this.props;\n    \n    return (\n      <>\n        <Toolbar\n          sortParams={sortParams}\n          groupParams={groupParams}\n          searchString={searchString}\n          onParamsChange={this.handleToolbarParamsChange}\n        />\n        {\n          isLoading\n            ? <div className='loading'>loading...</div>\n            : dogsGroups.map((group, index) => (\n              <DogsGroup\n                key={index}\n                {...group}\n                isLoading={isLoading}\n                columns={columns}\n                onItemClick={this.handleItemClick}\n              />\n            ))\n        }\n      </>\n    );\n  }\n};\n\nContainer.propTypes = {\n  dogsGroups: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    items: PropTypes.array,\n  })),\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  columns: PropTypes.array,\n  sortParams: PropTypes.object,\n  groupParams: PropTypes.object,\n  searchString: PropTypes.string,\n\n  fetchDogsListAction: PropTypes.func,\n  dogsListChangeSortAction: PropTypes.func,\n  dogsListChangeGroupAction: PropTypes.func,\n  dogsListChangeSearchAction: PropTypes.func,\n};\n\nexport default Container;","export const ACTION_TYPES = {\n  DOGS_LIST_GET_DATA_REQUEST: 'DOGS_LIST_GET_DATA_REQUEST',\n  DOGS_LIST_GET_DATA_SUCCESS: 'DOGS_LIST_GET_DATA_SUCCESS',\n  DOGS_LIST_GET_DATA_FAIL: 'DOGS_LIST_GET_DATA_FAIL',\n  \n  DOGS_LIST_CHANGE_SORT: 'DOGS_LIST_CHANGE_SORT',\n  DOGS_LIST_CHANGE_GROUP: 'DOGS_LIST_CHANGE_GROUP',\n  DOGS_LIST_CHANGE_SEARCH: 'DOGS_LIST_CHANGE_SEARCH',\n};\n\nexport const DOGS_LIST_COLUMNS = [\n  {\n    id: 'chipId',\n    text: 'ИД',\n    visible: true,\n  },\n  {\n    id: 'name',\n    text: 'Имя',\n    visible: true,\n  },\n  {\n    id: 'birthday',\n    text: 'Год рождения',\n    visible: true,\n  },\n  {\n    id: 'avairy',\n    text: 'Вольер',\n    visible: true,\n  },\n  {\n    id: 'sex',\n    text: 'Пол',\n    visible: true,\n  },\n];\n\nexport const SORT_TYPES = [\n  {\n    id: 'nameAsc',\n    label: 'Имя (возр)',\n    fieldId: 'name',\n    direction: 'asc',\n  },\n  {\n    id: 'nameDesc',\n    label: 'Имя (убыв)',\n    fieldId: 'name',\n    direction: 'desc',\n  },\n  {\n    id: 'birthdayAsc',\n    label: 'Год рождения (возр)',\n    fieldId: 'birthday',\n    direction: 'asc',\n  },\n  {\n    id: 'birthdayDesc',\n    label: 'Год рождения (убыв)',\n    fieldId: 'birthday',\n    direction: 'desc',\n  },\n];\n\nexport const GROUP_TYPES = [\n  {\n    id: 'avairy',\n    label: 'Вольер',\n  },\n  {\n    id: 'walkingGroup',\n    label: 'Выгул',\n  },\n];","import data from \"./data.json\";\n\nlet dogsData = [...data.list];\n\nexport const fetchDogsList = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(dogsData);\n    }, 200);\n  });\n};\n\nexport const fetchDogById = (chipId) => {\n  return new Promise((resolve, reject) => {\n    const dogData = dogsData.find(dog => dog.chipId === chipId);\n\n    setTimeout(() => {\n      resolve(dogData);\n    }, 200);\n  });\n}; \n\nexport const saveDogData = data => {\n  return new Promise((resolve, reject) => {\n    dogsData = dogsData.map(dog => (dog.chipId === data.chipId ? data : dog));\n\n    setTimeout(() => {\n      resolve(data.chipId);\n    }, 200);\n  });\n};","import { ACTION_TYPES } from './constants';\nimport { fetchDogsList } from '../../../backend';\n\nconst dogsListGetDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_REQUEST,\n});\n\nconst dogsListGetDataSuccess = (dogsList) => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_SUCCESS,\n  payload: {\n    dogsList,\n  }\n});\n\nconst dogsListGetDataFail = (error) => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_FAIL,\n  error,\n});\n\nexport const fetchDogsListAction = () => {\n  return (dispatch) => {\n    dispatch(dogsListGetDataRequest());\n    \n    fetchDogsList()\n      .then(data => dispatch(dogsListGetDataSuccess(data)))\n      .catch(error => dispatch(dogsListGetDataFail(error)));\n  };\n};\n\nexport const dogsListChangeSortAction = (fieldId) => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_SORT,\n  payload: {\n    fieldId,\n  },\n});\n\nexport const dogsListChangeGroupAction = (fieldId) => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_GROUP,\n  payload: {\n    fieldId,\n  },\n});\n\nexport const dogsListChangeSearchAction = (searchString) => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_SEARCH,\n  payload: {\n    searchString,\n  },\n});","import {\n  filterDogsList,\n  sortDogsList,\n  groupDogsList,\n} from './utils';\n\nconst dogsGroupsSelector = (state) => {\n  const {\n    dogsList,\n    searchString,\n    sortParams,\n    groupParams,\n  } = state;\n\n  let result = dogsList;\n\n  if (searchString) {\n    result = filterDogsList(result, searchString);\n  };\n\n  result = sortDogsList(result, sortParams);\n\n  result = groupDogsList(result, groupParams);\n\n  return result;\n};\n\nconst isLoadingSelector = state => state.isLoading;\n\nconst errorSelector = state => state.error;\n\nconst columnsSelector = state => (\n  state.columns.filter(column => column.visible)\n);\n\nconst sortParamsSelector = (state) => state.sortParams;\n\nconst groupParamsSelector = (state) => state.groupParams;\n\nconst searchSelector = (state) => state.searchString;\n\nconst mapStateToProps = ({ dogsListState: state }) => ({\n  dogsGroups: dogsGroupsSelector(state),\n  isLoading: isLoadingSelector(state),\n  error: errorSelector(state),\n  columns: columnsSelector(state),\n  sortParams: sortParamsSelector(state),\n  groupParams: groupParamsSelector(state),\n  searchString: searchSelector(state),\n});\n\nexport default mapStateToProps;","export const filterDogsList = (dogsList, searchString) =>\n  dogsList.filter(dog => {\n    const name = dog.name.toLowerCase();\n    const subString = searchString.toLowerCase();\n    \n    return name.includes(subString);\n  });\n\nexport const sortDogsList = (dogsList, sortParams) => {\n  const { items, fieldId: sortTypeId } = sortParams;\n  const sortType = items.find(item => item.id === sortTypeId);\n  const { fieldId, direction } = sortType || {};\n\n  if (direction === 'asc') {\n    return dogsList.sort((a, b) => a[fieldId].localeCompare(b[fieldId]));\n  };\n\n  return dogsList.sort((a, b) => b[fieldId].localeCompare(a[fieldId]));\n};\n\nexport const groupDogsList = (dogsList, groupParams) => {\n  const { items, fieldId } = groupParams;\n  const groupType = items.find(item => item.id === fieldId);\n  const { id, label } = groupType || {};\n\n  let result = [];\n\n  dogsList.forEach(item => {\n    const title = `${label}: ${item[id]}`;\n    const group = result.find(resultItem => resultItem.title === title);\n\n    group\n      ? group.items.push(item)\n      : result.push({\n          title: title,\n          items: [item],\n        });\n  });\n\n  return result.sort((a, b) => a.title.localeCompare(b.title));\n};","import { connect } from \"react-redux\";\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport Container from './container';\nimport * as actions from './action-creators';\nimport mapStateToProps from './selectors';\n\nconst withConnect = connect(mapStateToProps, actions);\n\nconst DogsListContainer = compose(\n  withRouter,\n  withConnect,\n)(Container);\n\nexport default DogsListContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Toolbar = (props) => {\n  const {\n    isEditing,\n    onToolbarItemClick,\n  } = props;\n\n  const onBackClick = () => onToolbarItemClick({ id: 'back' });\n  const onEditClick = () => onToolbarItemClick({ id: 'edit' });\n  const onCancelClick = () => onToolbarItemClick({ id: 'cancel' });\n  \n  return (\n    <div className=\"toolbar\">\n      <button onClick={onBackClick}>Back</button>\n      {\n        isEditing\n          ? <button onClick={onCancelClick}>Cancel</button>\n          : <button onClick={onEditClick}>Edit</button>\n      }\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  onToolbarItemClick: PropTypes.func,\n};\n\nexport default Toolbar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst Input = ({ name, value, onChange }) => (\n  <input\n    className='dog-form__field'\n    type='text'\n    name={name}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nconst Textarea = ({ name, value, onChange }) => (\n  <textarea\n    className='dog-form__field'\n    name={name}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nconst Select = ({ name, value, options, onChange }) => (\n  <select\n    className='dog-form__field'\n    name={name}\n    value={value}\n    onChange={onChange}\n  >\n    {\n      options.map((option, index) =>\n        <option key={index} value={option.value}>{option.label}</option>\n      )\n    }\n  </select>\n);\n\nconst DogFormParam = (props) => {\n  const {\n    isEditing,\n    fieldId,\n    label,\n    value,\n    type,\n    options,\n    onChange,\n  } = props;\n\n  const renderFieldEditMode = () => {\n    switch (type) {\n      case 'input':\n      case 'link':\n        return <Input name={fieldId} value={value} onChange={onChange} />\n    \n      case 'textarea':\n        return <Textarea name={fieldId} value={value} onChange={onChange} />\n    \n      case 'select':\n        return <Select name={fieldId} value={value} options={options} onChange={onChange} />\n    \n      default:\n        break;\n    }\n  };\n\n  const renderFieldViewMode = () => (\n    (type === 'link')\n      ? <a href={value}>{value}</a>\n      : <div>{String(value)}</div>\n  );\n\n  return(\n    <div className=\"dog-form__param\">\n      <label className=\"dog-form__label\">{label}</label>\n      {\n        isEditing\n        ? renderFieldEditMode()\n        : renderFieldViewMode()\n      }\n    </div>\n  );\n};\n\nDogFormParam.propTypes = {\n  isEditing: PropTypes.bool,\n  fieldId: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  type: PropTypes.string,\n  options: PropTypes.array,\n  onChange: PropTypes.func,\n};\n\nexport default DogFormParam;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DogFormParam from '../dogFormParam';\n\nimport './styles.css';\n\nconst DogForm = (props) => {\n  const {\n    dogData,\n    isEditing,\n    fields,\n    dictionaries,\n    onDataChange,\n    onSubmit,\n  } = props;\n  \n  const handleChange = (event) => {\n    const { name, value, } = event.target;\n\n    onDataChange({\n      fieldName: name,\n      fieldValue: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(dogData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"dog-form\">\n        <div className=\"dog-form__image\"></div>\n        \n        <div className=\"dog-form__data\">\n            {\n              fields.map(({ id: fieldId, text: fieldLabel, type: fieldType }, index) => \n                <DogFormParam\n                  key={index}\n                  isEditing={isEditing}\n                  fieldId={fieldId} \n                  label={fieldLabel}\n                  value={dogData[fieldId]}\n                  type={fieldType}\n                  options={dictionaries[fieldId]}\n                  onChange={handleChange}\n                />\n              )\n            }\n        </div>\n      </div>\n\n      {\n        isEditing &&\n        <input className=\"dog-form__submit\" type=\"submit\" value=\"Сохранить\" />\n      }\n    </form>\n\n  );\n};\n\nDogForm.propTypes = {\n  dogData: PropTypes.object,\n  isEditing: PropTypes.bool,\n  fields: PropTypes.array,\n  dictionaries: PropTypes.object,\n  onDataChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default DogForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '../../../components/dogsItemToolbar';\nimport DogForm from '../../../components/dogForm';\n\nimport './styles.css';\n\nclass Container extends Component {\n  componentDidMount() {\n    const { fetchDogDataAction, location } = this.props;\n    const dogChipId = location.pathname.substr(5);\n    fetchDogDataAction(dogChipId);\n  };\n\n  handleGoBack = () => {\n    const {\n      history,\n      isEditing,\n      dogsItemChangeModeToViewAction,\n    } = this.props;\n\n    if (isEditing) {\n      dogsItemChangeModeToViewAction();\n    }\n    \n    history.push('/');\n  };\n\n  handleToolbarItemClick = ({ id }) => {\n    switch (id) {\n      case 'back':\n        this.handleGoBack();\n        break;\n\n      case 'edit':\n        this.props.dogsItemChangeModeToEditAction();\n        break;\n\n      case 'cancel':\n        this.props.dogsItemChangeModeToViewAction();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      dogData,\n      isLoading,\n      error,\n      isEditing,\n      fields,\n      dictionaries,\n      saveDogDataAction,\n      dogsItemChangeFieldValueAction,\n    } = this.props;\n\n    if (error) {\n      return `Error: ${error}`;\n    }\n\n    return (\n      <>\n        <Toolbar isEditing={isEditing} onToolbarItemClick={this.handleToolbarItemClick}/>\n        {\n          isLoading\n          ? <div className='loading'>loading...</div>\n          : <DogForm\n              dogData={dogData}\n              isEditing={isEditing}\n              fields={fields}\n              dictionaries={dictionaries}\n              onDataChange={dogsItemChangeFieldValueAction}\n              onSubmit={saveDogDataAction}\n            />\n        }\n      </>\n    );\n  }\n};\n\nContainer.propTypes = {\n  dogData: PropTypes.object,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  isEditing: PropTypes.bool,\n  savedCopy: PropTypes.object,\n  fields: PropTypes.array,\n  dictionaries: PropTypes.object,\n\n  fetchDogDataAction: PropTypes.func,\n  saveDogDataAction: PropTypes.func,\n  dogsItemChangeModeToViewAction: PropTypes.func,\n  dogsItemChangeModeToEditAction: PropTypes.func,\n  dogsItemChangeFieldValueAction: PropTypes.func,\n};\n\nexport default Container;","export const ACTION_TYPES = {\n  DOGS_ITEM_GET_DATA_REQUEST: 'DOGS_ITEM_GET_DATA_REQUEST',\n  DOGS_ITEM_GET_DATA_SUCCESS: 'DOGS_ITEM_GET_DATA_SUCCESS',\n  DOGS_ITEM_GET_DATA_FAIL: 'DOGS_ITEM_GET_DATA_FAIL',\n\n  DOGS_ITEM_SAVE_DATA_REQUEST: 'DOGS_ITEM_SAVE_DATA_REQUEST',\n  DOGS_ITEM_SAVE_DATA_SUCCESS: 'DOGS_ITEM_SAVE_DATA_SUCCESS',\n  DOGS_ITEM_SAVE_DATA_FAIL: 'DOGS_ITEM_SAVE_DATA_FAIL',\n\n  DOGS_ITEM_CHANGE_MODE_TO_EDIT: 'DOGS_ITEM_CHANGE_MODE_TO_EDIT',\n  DOGS_ITEM_CHANGE_MODE_TO_VIEW: 'DOGS_ITEM_CHANGE_MODE_TO_VIEW',\n  DOGS_ITEM_CHANGE_FIELD_VALUE: 'DOGS_ITEM_CHANGE_FIELD_VALUE',\n};\n\nexport const DOGS_ITEM_FIELDS = [\n  {\n    id: 'name',\n    text: 'Имя',\n    type: 'input',\n  },\n  {\n    id: 'birthday',\n    text: 'Год рождения',\n    type: 'input',\n  },\n  {\n    id: 'sex',\n    text: 'Пол',\n    type: 'select',\n  },\n  {\n    id: 'row',\n    text: 'Ряд',\n    type: 'input',\n  },\n  {\n    id: 'avairy',\n    text: 'Вольер',\n    type: 'input',\n  },\n  {\n    id: 'catalogLink',\n    text: 'Ссылка',\n    type: 'link',\n  },\n  {\n    id: 'chipId',\n    text: 'ИД',\n    type: 'input',\n  },\n  {\n    id: 'isWalking',\n    text: 'Гуляет',\n    type: 'select',\n  },\n  {\n    id: 'shelterDay',\n    text: 'Дата вылова',\n    type: 'input',\n  },\n  {\n    id: 'status',\n    text: 'Статус',\n    type: 'select',\n  },\n  {\n    id: 'walkingGroup',\n    text: 'Группа выгула',\n    type: 'select',\n  },\n  {\n    id: 'description',\n    text: 'Описание',\n    type: 'textarea',\n  },\n];\n\nexport const DICTIONARIES = {\n  sex: [\n    {\n      label: 'мужской',\n      value: 'male',\n    },\n    {\n      label: 'женский',\n      value: 'female',\n    },\n  ],\n  isWalking: [\n    {\n      label: 'да',\n      value: true,\n    },\n    {\n      label: 'нет',\n      value: false,\n    },\n  ],\n  status: [\n    {\n      label: 'healthy',\n      value: 'healthy',\n    },\n    {\n      label: 'hospice',\n      value: 'hospice',\n    },\n    {\n      label: 'insulator',\n      value: 'insulator',\n    },\n    {\n      label: 'supervised',\n      value: 'supervised',\n    },\n    {\n      label: 'dead',\n      value: 'dead',\n    },\n  ],\n  walkingGroup: [\n    {\n      label: 'Выгул №1',\n      value: '1',\n    },\n    {\n      label: 'Выгул №2',\n      value: '2',\n    },\n    {\n      label: 'Выгул №3',\n      value: '3',\n    },\n    {\n      label: 'Выгул №4',\n      value: '4',\n    },\n    {\n      label: 'Не гуляет',\n      value: 'null',\n    },\n  ],\n};","import { ACTION_TYPES } from './constants';\nimport {\n  fetchDogById,\n  saveDogData,\n} from '../../../backend';\n\nconst dogsItemGetDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_REQUEST,\n});\n\nconst dogsItemGetDataSuccess = (dogData) => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_SUCCESS,\n  payload: {\n    dogData,\n  },\n});\n\nconst dogsItemGetDataFail = (error) => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_FAIL,\n  error,\n});\n\nexport const fetchDogDataAction = (chipId) => {\n  return (dispatch) => {\n    dispatch(dogsItemGetDataRequest());\n\n    fetchDogById(chipId)\n      .then(dogData => dispatch(dogsItemGetDataSuccess(dogData)))\n      .catch(error => dispatch(dogsItemGetDataFail(error)));\n  };\n};\n\nconst dogsItemSaveDogDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_REQUEST,\n});\n\nconst dogsItemSaveDogDataSuccess = (dogData) => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_SUCCESS,\n  payload: {\n    dogData,\n  },\n});\n\nconst dogsItemSaveDogDataFail = (error) => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_FAIL,\n  error,\n});\n\nexport const saveDogDataAction = (dogData) => {\n  return (dispatch) => {\n    dispatch(dogsItemSaveDogDataRequest());\n\n    saveDogData(dogData)\n      .then(chipId => {\n        dispatch(dogsItemSaveDogDataSuccess(chipId));\n        dispatch(fetchDogDataAction(chipId));\n      })\n      .catch(error => dispatch(dogsItemSaveDogDataFail(error)));\n  };\n};\n\nexport const dogsItemChangeModeToEditAction = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_EDIT,\n  payload: {},\n});\n\nexport const dogsItemChangeModeToViewAction = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_VIEW,\n  payload: {},\n});\n  \nexport const dogsItemChangeFieldValueAction = (dogData) => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_FIELD_VALUE,\n  payload: {\n    ...dogData,\n  },\n});","const dogDataSelector = (state) => state.dogData;\n\nconst isLoadingSelector = (state) => state.isLoading;\n\nconst errorSelector = (state) => state.error;\n\nconst isEditingSelector = (state) => state.isEditing;\n\nconst savedCopySelector = (state) => state.savedCopy;\n\nconst fieldsSelector = (state) => state.fields;\n\nconst dictionariesSelector = (state) => state.dictionaries;\n\nconst mapStateToProps = ({ dogsItemState: state }) => ({\n  dogData: dogDataSelector(state),\n  isLoading: isLoadingSelector(state),\n  error: errorSelector(state),\n  isEditing: isEditingSelector(state),\n  savedCopy: savedCopySelector(state),\n  fields: fieldsSelector(state),\n  dictionaries: dictionariesSelector(state),\n});\n\nexport default mapStateToProps;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport Container from './container';\nimport * as actions from './action-creators';\nimport mapStateToProps from './selectors';\n\nconst withConnect = connect(mapStateToProps, actions);\n\nconst DogsItemContainer = compose(\n  withRouter, \n  withConnect,\n)(Container);\n\nexport default DogsItemContainer;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport DogsListContainer from '../../containers/dogs/list';\nimport DogsItemContainer from '../../containers/dogs/item';\nimport './styles.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className='main-wrapper'>\n        <Route path=\"/\" exact component={DogsListContainer} />\n        <Route path=\"/dog/:id\" component={DogsItemContainer} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import {\n  ACTION_TYPES,\n  DOGS_LIST_COLUMNS,\n  SORT_TYPES,\n  GROUP_TYPES,\n} from './constants';\n\nconst initialState = {\n  dogsList: [],\n  isLoading: false,\n  error: null,\n  columns: DOGS_LIST_COLUMNS,\n  sortParams: {\n    items: SORT_TYPES,\n    fieldId: 'birthdayAsc',\n  },\n  groupParams: {\n    items: GROUP_TYPES,\n    fieldId: 'avairy',\n  },\n  searchString: '',\n};\n\nconst dogsListReducer = (state = initialState, action) => {\n  const { type, payload, error } = action;\n\n  switch (type) {\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        dogsList: payload.dogsList,\n        isLoading: false,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_SORT:\n      return {\n        ...state,\n        sortParams: {\n          ...state.sortParams,\n          fieldId: payload.fieldId,\n        },\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_GROUP:\n      return {\n        ...state,\n        groupParams: {\n          ...state.groupParams,\n          fieldId: payload.fieldId,\n        },\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_SEARCH:\n      return {\n        ...state,\n        searchString: payload.searchString,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dogsListReducer;","import {\n  ACTION_TYPES,\n  DOGS_ITEM_FIELDS,\n  DICTIONARIES,\n} from './constants';\n\nconst initialState = {\n  dogData: {},\n  isLoading: false,\n  error: null,\n  isEditing: false,\n  savedCopy: {},\n  fields: DOGS_ITEM_FIELDS,\n  dictionaries: DICTIONARIES,\n};\n\nconst dogsItemReducer = (state = initialState, action) => {\n  const { type, payload, error } = action;\n\n  switch (type) {\n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        dogData: payload.dogData,\n        isLoading: false,\n        savedCopy: {\n          ...payload.dogData,\n        },\n      };\n    \n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error,\n      };\n      \n      case ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_EDIT:\n        return {\n          ...state,\n          isEditing: true,\n          savedCopy: {\n            ...state.dogData,\n          },\n        };\n\n      case ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_VIEW:\n        return {\n          ...state,\n          isEditing: false,\n          dogData: {\n            ...state.savedCopy,\n          },\n          savedCopy: {},\n        };\n\n      case ACTION_TYPES.DOGS_ITEM_CHANGE_FIELD_VALUE:\n        return {\n          ...state,\n          dogData: {\n            ...state.dogData,\n            [payload.fieldName]: payload.fieldValue,\n          },\n        };\n\n    default:\n      return state;\n  }\n};\n\nexport default dogsItemReducer;","import { combineReducers } from 'redux';\nimport dogsListReducer from '../containers/dogs/list/reducer';\nimport dogsItemReducer from '../containers/dogs/item/reducer';\n\nexport default combineReducers({\n  dogsListState: dogsListReducer,\n  dogsItemState: dogsItemReducer,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './root-reducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}