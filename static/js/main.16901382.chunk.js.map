{"version":3,"sources":["components/dogsListToolbar/styles.js","components/dogsListToolbar/index.jsx","components/dogsTable/styles.js","components/dogsTable/index.jsx","components/dogsGroup/styles.js","components/dogsGroup/index.jsx","containers/dogs/list/container.jsx","constants/index.js","containers/dogs/list/constants.js","backend/index.js","containers/dogs/list/action-creators.js","containers/dogs/list/selectors.js","containers/dogs/list/utils.js","containers/dogs/list/index.js","components/dogsItemToolbar/styles.js","components/dogsItemToolbar/index.jsx","components/dogFormParam/styles.js","components/dogFormParam/index.js","components/dogForm/styles.js","components/dogForm/index.jsx","containers/dogs/item/container.jsx","containers/dogs/item/constants.js","containers/dogs/item/action-creators.js","containers/dogs/item/selectors.js","containers/dogs/item/index.js","components/app/styles.js","components/app/index.js","containers/dogs/list/reducer.js","containers/dogs/item/reducer.js","store/root-reducer.js","store/index.js","index.js"],"names":["StyledToolbar","styled","div","StyledToolbarItem","StyledToolbarLabel","label","Toolbar","sortParams","groupParams","searchString","onParamsChange","defaultValue","fieldId","onChange","event","fieldValue","target","value","items","map","item","key","id","type","StyledDogsTable","StyledDogsTableLoading","StyledDogsTableCell","StyledDogsTableRowHead","StyledDogsTableRow","DogsTable","dogsList","isLoading","columns","onRowClick","field","index","text","onClick","chipId","StyledGroup","StyledTitle","DogsGroup","title","onItemClick","Container","handleItemClick","history","props","push","handleToolbarParamsChange","dogsListChangeSortAction","dogsListChangeGroupAction","dogsListChangeSearchAction","this","fetchDogsListAction","dogsGroups","className","group","Component","DOGS_FIELDS_ID","DOGS_FIELDS","ACTION_TYPES","DOGS_LIST_COLUMNS","visible","dogsData","data","list","dispatch","Promise","resolve","reject","setTimeout","then","payload","catch","error","dogsListGetDataFail","isLoadingSelector","state","errorSelector","columnsSelector","Object","values","filter","column","sortParamsSelector","groupParamsSelector","searchSelector","dogsGroupReselector","createSelector","result","dog","name","toLowerCase","subString","includes","filterDogsList","find","forEach","resultItem","sort","a","b","localeCompare","groupDogsList","sortTypeId","direction","sortDogsList","mapStateToProps","dogsListState","withConnect","connect","actions","DogsListContainer","compose","withRouter","StyledToolbarButton","button","isEditing","onToolbarItemClick","disabled","StyledParam","StyledLabel","StyledInput","input","StyledTextarea","textarea","StyledSelect","select","Input","Textarea","Select","options","option","DogFormParam","renderFieldEditMode","href","String","StyledDogForm","StyledDogFormImage","StyledDogFormData","StyledDogFormButton","DogForm","dogData","fields","dictionaries","onDataChange","onButtonClick","onSubmit","handleChange","fieldName","preventDefault","fieldLabel","fieldType","handleGoBack","dogsItemChangeModeToViewAction","handleButtonClick","dogsItemChangeModeToEditAction","fetchDogDataAction","location","pathname","substr","saveDogDataAction","dogsItemChangeFieldValueAction","DOGS_ITEM_FIELDS","fetchDogById","dogsItemGetDataSuccess","dogsItemGetDataFail","dogsItemSaveDogDataSuccess","dogsItemSaveDogDataFail","dogDataSelector","isEditingSelector","savedCopySelector","savedCopy","fieldsSelector","dictionariesSelector","dogsItemState","DogsItemContainer","Wrapper","App","path","exact","component","initialState","dogsListReducer","action","sex","isWalking","status","walkingGroup","dogsItemReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16901382.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledToolbar = styled.div`\n  display: flex;\n  border-bottom: 1px solid #666;\n  margin-bottom: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const StyledToolbarItem = styled.div`\n  margin-right: 50px;\n`;\n\nexport const StyledToolbarLabel = styled.label`\n  margin-right: 10px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledToolbar,\n  StyledToolbarItem,\n  StyledToolbarLabel,\n} from './styles.js';\n\nconst Toolbar = ({\n  sortParams,\n  groupParams,\n  searchString,\n  onParamsChange\n}) => {\n  const handleSortChange = event => {\n    onParamsChange({\n      fieldId: 'sort',\n      fieldValue: event.target.value,\n    });\n  };\n\n  const handleGroupChange = event => {\n    onParamsChange({\n      fieldId: 'group',\n      fieldValue: event.target.value,\n    });\n  };\n\n  const handleSearchChange = event => {\n    onParamsChange({\n      fieldId: 'search',\n      fieldValue: event.target.value,\n    });\n  };\n\n  return (\n    <StyledToolbar>\n      <StyledToolbarItem>\n        <StyledToolbarLabel>Сортировка:</StyledToolbarLabel>\n        <select defaultValue={sortParams.fieldId} onChange={handleSortChange}>\n          {\n            sortParams.items.map(item => \n              <option key={item.id} value={item.id}>{item.label}</option>\n            )\n          }\n        </select>\n      </StyledToolbarItem>\n\n      <StyledToolbarItem>\n        <StyledToolbarLabel>Группировка:</StyledToolbarLabel>\n        <select defaultValue={groupParams.fieldId} onChange={handleGroupChange}>\n          {\n            groupParams.items.map(item => \n              <option key={item.id} value={item.id}>{item.label}</option>\n            )\n          }\n        </select>\n      </StyledToolbarItem>\n\n      <StyledToolbarItem>\n        <StyledToolbarLabel>Поиск:</StyledToolbarLabel>\n        <input type='text' value={searchString} onChange={handleSearchChange} />\n      </StyledToolbarItem>\n    </StyledToolbar>\n  );\n};\n\nToolbar.propTypes = {\n  sortParams: PropTypes.shape({\n    items: PropTypes.array,\n    fieldId: PropTypes.string,\n  }),\n  groupParams: PropTypes.shape({\n    items: PropTypes.array,\n    fieldId: PropTypes.string,\n  }),\n  searchString: PropTypes.string,\n};\n\nexport default Toolbar;","import styled from 'styled-components';\n\nexport const StyledDogsTable = styled.div`\n  width: 100%;\n`;\n\nexport const StyledDogsTableLoading = styled.div`\n  padding: 10px 0;\n`;\n\nexport const StyledDogsTableCell = styled.div`\n  flex-basis: 100%;\n  padding: 10px 0;\n`;\n\nexport const StyledDogsTableRowHead = styled.div`\n  display: flex;\n  border-bottom: 1px solid #ccc;\n  font-weight: bold;\n`;\n\nexport const StyledDogsTableRow = styled.div`\n  display: flex;\n  border-bottom: 1px solid #ccc;\n  cursor: pointer;\n  &:hover {\n    background-color: #eee;\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledDogsTable,\n  StyledDogsTableCell,\n  StyledDogsTableLoading,\n  StyledDogsTableRow,\n  StyledDogsTableRowHead,\n} from './styles.js';\n\nconst DogsTable = ({\n  dogsList,\n  isLoading,\n  columns,\n  onRowClick,\n}) => {\n  const renderRow = item => {\n    const handleClick = () => onRowClick({ id: item.chipId });\n\n    return (\n      <StyledDogsTableRow onClick={handleClick} key={item.chipId}>\n        {\n          columns.map((field, index) => (\n            <StyledDogsTableCell key={index}>{item[field.id]}</StyledDogsTableCell>\n          ))\n        }\n      </StyledDogsTableRow>\n    )\n  }\n\n  return (\n    <StyledDogsTable>\n      <StyledDogsTableRowHead>\n        {\n          columns.map((field, index) => (\n            <StyledDogsTableCell key={index}>{field.text}</StyledDogsTableCell>\n          ))\n        }\n      </StyledDogsTableRowHead>\n      \n      {\n        isLoading \n          ? <StyledDogsTableLoading>loading...</StyledDogsTableLoading>\n          : dogsList.map(renderRow) // внутрь renderRow придут 3 аргумента из метода .map() - item, index, array\n      }      \n    </StyledDogsTable>\n  )\n};\n\nDogsTable.propTypes = {\n  dogsList: PropTypes.array,\n  isLoading: PropTypes.bool,\n  columns: PropTypes.array,\n  onRowClick: PropTypes.func,\n};\n\nexport default DogsTable;","import styled from 'styled-components';\n\nexport const StyledGroup = styled.div`\n  margin-bottom: 50px;\n`;\n\nexport const StyledTitle = styled.div`\n  padding: 10px;\n  border-bottom: 1px solid #ccc;\n  font-weight: bold;\n  background-color: #ccc;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DogsTable from '../dogsTable';\n\nimport {\n  StyledGroup,\n  StyledTitle,\n} from './styles.js';\n\nconst DogsGroup = ({\n  title,\n  items,\n  isLoading,\n  columns,\n  onItemClick,\n}) => (\n  <StyledGroup>\n    {title && <StyledTitle>{title}</StyledTitle>}\n\n    <DogsTable\n      dogsList={items}\n      isLoading={isLoading}\n      columns={columns}\n      onRowClick={onItemClick}\n    />\n  </StyledGroup>\n  );\n\nDogsGroup.propTypes = {\n  title: PropTypes.string,\n  items: PropTypes.array,\n  isLoading: PropTypes.bool,\n  columns: PropTypes.array,\n  onItemClick: PropTypes.func,\n};\n\nexport default DogsGroup;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '../../../components/dogsListToolbar';\nimport DogsGroup from '../../../components/dogsGroup';\n\nimport './styles.css';\n\nclass Container extends Component {\n  componentDidMount() {\n    this.props.fetchDogsListAction();\n  };\n\n  handleItemClick = ({ id }) => {\n    const { history } = this.props;\n    \n    if (id) {\n      history.push(`/dog/${id}`);\n    }\n  };\n  \n  handleToolbarParamsChange = ({ fieldId, fieldValue }) => {\n    switch (fieldId) {\n      case 'sort':\n        this.props.dogsListChangeSortAction(fieldValue);\n        break;\n\n      case 'group':\n        this.props.dogsListChangeGroupAction(fieldValue);\n        break;\n\n      case 'search':\n        this.props.dogsListChangeSearchAction(fieldValue);\n        break;\n\n      default:\n        break;\n    };\n  };\n\n  render() {\n    const {\n      dogsGroups,\n      isLoading,\n      columns,\n      sortParams,\n      groupParams,\n      searchString,\n    } = this.props;\n    \n    return (\n      <>\n        <Toolbar\n          sortParams={sortParams}\n          groupParams={groupParams}\n          searchString={searchString}\n          onParamsChange={this.handleToolbarParamsChange}\n        />\n        {\n          isLoading\n            ? <div className='loading'>loading...</div>\n            : dogsGroups.map((group, index) => (\n              <DogsGroup\n                key={index}\n                {...group}\n                isLoading={isLoading}\n                columns={columns}\n                onItemClick={this.handleItemClick}\n              />\n            ))\n        }\n      </>\n    );\n  }\n};\n\nContainer.propTypes = {\n  dogsGroups: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    items: PropTypes.array,\n  })),\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  columns: PropTypes.array,\n  sortParams: PropTypes.object,\n  groupParams: PropTypes.object,\n  searchString: PropTypes.string,\n\n  fetchDogsListAction: PropTypes.func,\n  dogsListChangeSortAction: PropTypes.func,\n  dogsListChangeGroupAction: PropTypes.func,\n  dogsListChangeSearchAction: PropTypes.func,\n};\n\nexport default Container;","export const DOGS_FIELDS_ID = {\n  NAME: 'name',\n  BIRTHDAY: 'birthday',\n  SEX: 'sex',\n  ROW: 'row',\n  AVAIRY: 'avairy',\n  CATALOG_LINK: 'catalogLink',\n  CHIP_ID: 'chipId',\n  ISWALKING: 'isWalking',\n  SHELTERDAY: 'shelterDay',\n  STATUS: 'status',\n  WALKING_GROUP: 'walkingGroup',\n  DESCRIPTION: 'description',\n};\n\nexport const DOGS_FIELDS = {\n  [DOGS_FIELDS_ID.NAME]: {\n    id: DOGS_FIELDS_ID.NAME,\n    text: 'Имя',\n  },\n  [DOGS_FIELDS_ID.BIRTHDAY]: {\n    id: DOGS_FIELDS_ID.BIRTHDAY,\n    text: 'Год рождения',\n  },\n  [DOGS_FIELDS_ID.SEX]: {\n    id: DOGS_FIELDS_ID.SEX,\n    text: 'Пол',\n  },\n  [DOGS_FIELDS_ID.ROW]: {\n    id: DOGS_FIELDS_ID.ROW,\n    text: 'Ряд',\n  },\n  [DOGS_FIELDS_ID.AVAIRY]: {\n    id: DOGS_FIELDS_ID.AVAIRY,\n    text: 'Вольер',\n  },\n  [DOGS_FIELDS_ID.CATALOG_LINK]: {\n    id: DOGS_FIELDS_ID.CATALOG_LINK,\n    text: 'Ссылка',\n  },\n  [DOGS_FIELDS_ID.CHIP_ID]: {\n    id: DOGS_FIELDS_ID.CHIP_ID,\n    text: 'ИД',\n  },\n  [DOGS_FIELDS_ID.ISWALKING]: {\n    id: DOGS_FIELDS_ID.ISWALKING,\n    text: 'Гуляет',\n  },\n  [DOGS_FIELDS_ID.SHELTERDAY]: {\n    id: DOGS_FIELDS_ID.SHELTERDAY,\n    text: 'Дата вылова',\n  },\n  [DOGS_FIELDS_ID.STATUS]: {\n    id: DOGS_FIELDS_ID.STATUS,\n    text: 'Статус',\n  },\n  [DOGS_FIELDS_ID.WALKING_GROUP]: {\n    id: DOGS_FIELDS_ID.WALKING_GROUP,\n    text: 'Группа выгула',\n  },\n  [DOGS_FIELDS_ID.DESCRIPTION]: {\n    id: DOGS_FIELDS_ID.DESCRIPTION,\n    text: 'Описание',\n  },\n};","import {\n  DOGS_FIELDS_ID,\n  DOGS_FIELDS,\n} from '../../../constants';\n\nexport const ACTION_TYPES = {\n  DOGS_LIST_GET_DATA_REQUEST: 'DOGS_LIST_GET_DATA_REQUEST',\n  DOGS_LIST_GET_DATA_SUCCESS: 'DOGS_LIST_GET_DATA_SUCCESS',\n  DOGS_LIST_GET_DATA_FAIL: 'DOGS_LIST_GET_DATA_FAIL',\n  \n  DOGS_LIST_CHANGE_SORT: 'DOGS_LIST_CHANGE_SORT',\n  DOGS_LIST_CHANGE_GROUP: 'DOGS_LIST_CHANGE_GROUP',\n  DOGS_LIST_CHANGE_SEARCH: 'DOGS_LIST_CHANGE_SEARCH',\n};\n\nexport const DOGS_LIST_COLUMNS = {\n  [DOGS_FIELDS_ID.CHIP_ID]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.CHIP_ID],\n    visible: true,\n  },\n  [DOGS_FIELDS_ID.NAME]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.NAME],\n    visible: true,\n  },\n  [DOGS_FIELDS_ID.BIRTHDAY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.BIRTHDAY],\n    visible: true,\n  },\n  [DOGS_FIELDS_ID.AVAIRY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.AVAIRY],\n    visible: true,\n  },\n  [DOGS_FIELDS_ID.SEX]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.SEX],\n    visible: true,\n  },\n};\n\nexport const SORT_TYPES = [\n  {\n    id: 'nameAsc',\n    label: 'Имя (возр)',\n    fieldId: 'name',\n    direction: 'asc',\n  },\n  {\n    id: 'nameDesc',\n    label: 'Имя (убыв)',\n    fieldId: 'name',\n    direction: 'desc',\n  },\n  {\n    id: 'birthdayAsc',\n    label: 'Год рождения (возр)',\n    fieldId: 'birthday',\n    direction: 'asc',\n  },\n  {\n    id: 'birthdayDesc',\n    label: 'Год рождения (убыв)',\n    fieldId: 'birthday',\n    direction: 'desc',\n  },\n];\n\nexport const GROUP_TYPES = [\n  {\n    id: 'avairy',\n    label: 'Вольер',\n  },\n  {\n    id: 'walkingGroup',\n    label: 'Выгул',\n  },\n];","import data from \"./data.json\";\n\nlet dogsData = [...data.list];\n\nexport const fetchDogsList = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(dogsData);\n    }, 200);\n  });\n};\n\nexport const fetchDogById = chipId =>\n  new Promise((resolve, reject) => {\n    const dogData = dogsData.find(dog => dog.chipId === chipId);\n\n    setTimeout(() => {\n      resolve(dogData);\n    }, 200);\n  });\n\nexport const saveDogData = data =>\n  new Promise((resolve, reject) => {\n    dogsData = dogsData.map(dog => (dog.chipId === data.chipId ? data : dog));\n\n    setTimeout(() => {\n      resolve(data.chipId);\n    }, 200);\n  });","import { ACTION_TYPES } from './constants';\nimport { fetchDogsList } from '../../../backend';\n\nconst dogsListGetDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_REQUEST,\n});\n\nconst dogsListGetDataSuccess = dogsList => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_SUCCESS,\n  payload: {\n    dogsList,\n  },\n});\n\nconst dogsListGetDataFail = error => ({\n  type: ACTION_TYPES.DOGS_LIST_GET_DATA_FAIL,\n  error,\n});\n\nexport const fetchDogsListAction = () => dispatch => {\n  dispatch(dogsListGetDataRequest());\n  \n  fetchDogsList()\n    .then(data => dispatch(dogsListGetDataSuccess(data)))\n    .catch(error => dispatch(dogsListGetDataFail(error)));\n};\n\nexport const dogsListChangeSortAction = fieldId => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_SORT,\n  payload: {\n    fieldId,\n  },\n});\n\nexport const dogsListChangeGroupAction = fieldId => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_GROUP,\n  payload: {\n    fieldId,\n  },\n});\n\nexport const dogsListChangeSearchAction = searchString => ({\n  type: ACTION_TYPES.DOGS_LIST_CHANGE_SEARCH,\n  payload: {\n    searchString,\n  },\n});","import { createSelector } from 'reselect';\n\nimport {\n  filterDogsList,\n  sortDogsList,\n  groupDogsList,\n} from './utils';\n\nconst dogsListSelector = state => state.dogsList;\n\nconst isLoadingSelector = state => state.isLoading;\n\nconst errorSelector = state => state.error;\n\nconst columnsSelector = state => Object.values(state.columns).filter(column => column.visible);\n\nconst sortParamsSelector = state => state.sortParams;\n\nconst groupParamsSelector = state => state.groupParams;\n\nconst searchSelector = state => state.searchString;\n\nconst dogsGroupReselector = createSelector(\n  dogsListSelector,\n  sortParamsSelector,\n  groupParamsSelector,\n  searchSelector,\n  (dogsList, sortParams, groupParams, searchString) => {\n    let result = dogsList;\n\n    if (searchString) {\n      result = filterDogsList(result, searchString);\n    };\n\n    result = sortDogsList(result, sortParams);\n\n    result = groupDogsList(result, groupParams);\n\n    return result;\n  }\n);\n\nconst mapStateToProps = ({ dogsListState: state }) => ({\n  dogsGroups: dogsGroupReselector(state),\n  isLoading: isLoadingSelector(state),\n  error: errorSelector(state),\n  columns: columnsSelector(state),\n  sortParams: sortParamsSelector(state),\n  groupParams: groupParamsSelector(state),\n  searchString: searchSelector(state),\n});\n\nexport default mapStateToProps;","export const filterDogsList = (dogsList, searchString) =>\n  dogsList.filter(dog => {\n    const name = dog.name.toLowerCase();\n    const subString = searchString.toLowerCase();\n    \n    return name.includes(subString);\n  });\n\nexport const sortDogsList = (dogsList, sortParams) => {\n  const { items, fieldId: sortTypeId } = sortParams;\n  const sortType = items.find(item => item.id === sortTypeId);\n  const { fieldId, direction } = sortType || {};\n\n  if (direction === 'asc') {\n    return dogsList.sort((a, b) => a[fieldId].localeCompare(b[fieldId]));\n  };\n\n  return dogsList.sort((a, b) => b[fieldId].localeCompare(a[fieldId]));\n};\n\nexport const groupDogsList = (dogsList, groupParams) => {\n  const { items, fieldId } = groupParams;\n  const groupType = items.find(item => item.id === fieldId);\n  const { id, label } = groupType || {};\n\n  let result = [];\n\n  dogsList.forEach(item => {\n    const title = `${label}: ${item[id]}`;\n    const group = result.find(resultItem => resultItem.title === title);\n\n    group\n      ? group.items.push(item)\n      : result.push({\n          title: title,\n          items: [item],\n        });\n  });\n\n  return result.sort((a, b) => a.title.localeCompare(b.title));\n};","import { connect } from \"react-redux\";\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport Container from './container';\nimport * as actions from './action-creators';\nimport mapStateToProps from './selectors';\n\nconst withConnect = connect(mapStateToProps, actions);\n\nconst DogsListContainer = compose(\n  withRouter,\n  withConnect,\n)(Container);\n\nexport default DogsListContainer;","import styled from 'styled-components';\n\nexport const StyledToolbar = styled.div`\ndisplay: flex;\nborder-bottom: 1px solid #666;\nmargin-bottom: 30px;\npadding-bottom: 30px;\n`;\n\nexport const StyledToolbarButton = styled.button`\n  margin-right: 10px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledToolbar,\n  StyledToolbarButton,\n} from './styles.js';\n\nconst Toolbar = ({\n  isEditing,\n  onToolbarItemClick,\n}) => {\n  const onBackClick = () => onToolbarItemClick({ id: 'back' });\n  const onEditClick = () => onToolbarItemClick({ id: 'edit' });\n  \n  return (\n    <StyledToolbar>\n      <StyledToolbarButton onClick={onBackClick}>Назад</StyledToolbarButton>\n      <StyledToolbarButton onClick={onEditClick} disabled={isEditing}>Изменить</StyledToolbarButton>\n    </StyledToolbar>\n  );\n};\n\nToolbar.propTypes = {\n  onToolbarItemClick: PropTypes.func,\n};\n\nexport default Toolbar;","import styled from 'styled-components';\n\nexport const StyledParam = styled.div`\n  display: flex;\n  margin-bottom: 5px;\n`;\n\nexport const StyledLabel = styled.label`\n  width: 150px;\n  font-size: 14px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 300px;\n`;\n\nexport const StyledTextarea = styled.textarea`\n  width: 300px;\n`;\n\nexport const StyledSelect = styled.select`\n  width: 300px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledParam,\n  StyledLabel,\n  StyledInput,\n  StyledTextarea,\n  StyledSelect,\n} from './styles.js';\n\nconst Input = ({ name, value, onChange }) => (\n  <StyledInput\n    className='dog-form__field'\n    type='text'\n    name={name}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nconst Textarea = ({ name, value, onChange }) => (\n  <StyledTextarea\n    className='dog-form__field'\n    name={name}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nconst Select = ({ name, value, options, onChange }) => (\n  <StyledSelect\n    className='dog-form__field'\n    name={name}\n    value={value}\n    onChange={onChange}\n  >\n    {\n      options.map((option, index) =>\n        <option key={index} value={option.value}>{option.label}</option>\n      )\n    }\n  </StyledSelect>\n);\n\nconst DogFormParam = ({\n  isEditing,\n  fieldId,\n  label,\n  value,\n  type,\n  options,\n  onChange,\n}) => {\n  const renderFieldEditMode = () => {\n    switch (type) {\n      case 'input':\n      case 'link':\n        return <Input name={fieldId} value={value} onChange={onChange} />\n    \n      case 'textarea':\n        return <Textarea name={fieldId} value={value} onChange={onChange} />\n    \n      case 'select':\n        return <Select name={fieldId} value={value} options={options} onChange={onChange} />\n    \n      default:\n        break;\n    }\n  };\n\n  const renderFieldViewMode = () => (\n    (type === 'link')\n      ? <a href={value}>{value}</a>\n      : <div>{String(value)}</div>\n  );\n\n  return(\n    <StyledParam>\n      <StyledLabel>{label}</StyledLabel>\n      {\n        isEditing\n        ? renderFieldEditMode()\n        : renderFieldViewMode()\n      }\n    </StyledParam>\n  );\n};\n\nDogFormParam.propTypes = {\n  isEditing: PropTypes.bool,\n  fieldId: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  type: PropTypes.string,\n  options: PropTypes.array,\n  onChange: PropTypes.func,\n};\n\nexport default DogFormParam;","import styled from 'styled-components';\n\nexport const StyledDogForm = styled.div`\n  display: flex;\n`;\n\nexport const StyledDogFormImage = styled.div`\n  width: 100px;\n  height: 100px;\n  background-color: #ddd;\n  border: 1px solid #aaa;\n  margin-right: 30px;\n`;\n\nexport const StyledDogFormData = styled.div`\n\n`;\n\nexport const StyledDogFormButton = styled.button`\n  margin-right: 8px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DogFormParam from '../dogFormParam';\n\nimport {\n  StyledDogForm,\n  StyledDogFormImage,\n  StyledDogFormData,\n  StyledDogFormButton,\n} from './styles.js';\n\nconst DogForm = ({\n  dogData,\n  isEditing,\n  fields,\n  dictionaries,\n  onDataChange,\n  onButtonClick,\n  onSubmit,\n}) => {\n  const handleChange = ({ target: { name, value } }) => onDataChange({\n    fieldName: name,\n    fieldValue: value,\n  });\n\n  const onCancelClick = () => onButtonClick({ id: 'cancel' });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(dogData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <StyledDogForm>\n        <StyledDogFormImage/>\n        \n        <StyledDogFormData>\n            {\n              fields.map(({ id: fieldId, text: fieldLabel, type: fieldType }, index) => \n                <DogFormParam\n                  key={index}\n                  isEditing={isEditing}\n                  fieldId={fieldId} \n                  label={fieldLabel}\n                  value={dogData[fieldId]}\n                  type={fieldType}\n                  options={dictionaries[fieldId]}\n                  onChange={handleChange}\n                />\n              )\n            }\n        </StyledDogFormData>\n      </StyledDogForm>\n\n      {\n        isEditing &&\n          <>\n            <StyledDogFormButton onClick={onCancelClick}>Отменить</StyledDogFormButton>\n            <StyledDogFormButton type=\"submit\">Сохранить</StyledDogFormButton>\n          </>\n      }\n    </form>\n\n  );\n};\n\nDogForm.propTypes = {\n  dogData: PropTypes.object,\n  isEditing: PropTypes.bool,\n  fields: PropTypes.array,\n  dictionaries: PropTypes.object,\n  onDataChange: PropTypes.func,\n  onButtonClick: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default DogForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '../../../components/dogsItemToolbar';\nimport DogForm from '../../../components/dogForm';\n\nimport './styles.css';\n\nclass Container extends Component {\n  componentDidMount() {\n    const { fetchDogDataAction, location } = this.props;\n    const dogChipId = location.pathname.substr(5);\n\n    fetchDogDataAction(dogChipId);\n  };\n\n  handleGoBack = () => {\n    const {\n      history,\n      isEditing,\n      dogsItemChangeModeToViewAction,\n    } = this.props;\n\n    if (isEditing) {\n      dogsItemChangeModeToViewAction();\n    }\n    \n    history.push('/');\n  };\n\n  handleButtonClick = ({ id }) => {\n    switch (id) {\n      case 'back':\n        this.handleGoBack();\n        break;\n\n      case 'edit':\n        this.props.dogsItemChangeModeToEditAction();\n        break;\n\n      case 'cancel':\n        this.props.dogsItemChangeModeToViewAction();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      dogData,\n      isLoading,\n      error,\n      isEditing,\n      fields,\n      dictionaries,\n      saveDogDataAction,\n      dogsItemChangeFieldValueAction,\n    } = this.props;\n\n    if (error) {\n      return `Error: ${error}`;\n    }\n\n    return (\n      <>\n        <Toolbar\n          isEditing={isEditing}\n          onToolbarItemClick={this.handleButtonClick}\n        />\n        {\n          isLoading\n          ? <div className='loading'>loading...</div>\n          : <DogForm\n              dogData={dogData}\n              isEditing={isEditing}\n              fields={fields}\n              dictionaries={dictionaries}\n              onDataChange={dogsItemChangeFieldValueAction}\n              onButtonClick={this.handleButtonClick}\n              onSubmit={saveDogDataAction}\n            />\n        }\n      </>\n    );\n  }\n};\n\nContainer.propTypes = {\n  dogData: PropTypes.object,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  isEditing: PropTypes.bool,\n  savedCopy: PropTypes.object,\n  fields: PropTypes.array,\n  dictionaries: PropTypes.object,\n\n  fetchDogDataAction: PropTypes.func,\n  saveDogDataAction: PropTypes.func,\n  dogsItemChangeModeToViewAction: PropTypes.func,\n  dogsItemChangeModeToEditAction: PropTypes.func,\n  dogsItemChangeFieldValueAction: PropTypes.func,\n};\n\nexport default Container;","import {\n  DOGS_FIELDS_ID,\n  DOGS_FIELDS,\n} from '../../../constants';\n\nexport const ACTION_TYPES = {\n  DOGS_ITEM_GET_DATA_REQUEST: 'DOGS_ITEM_GET_DATA_REQUEST',\n  DOGS_ITEM_GET_DATA_SUCCESS: 'DOGS_ITEM_GET_DATA_SUCCESS',\n  DOGS_ITEM_GET_DATA_FAIL: 'DOGS_ITEM_GET_DATA_FAIL',\n\n  DOGS_ITEM_SAVE_DATA_REQUEST: 'DOGS_ITEM_SAVE_DATA_REQUEST',\n  DOGS_ITEM_SAVE_DATA_SUCCESS: 'DOGS_ITEM_SAVE_DATA_SUCCESS',\n  DOGS_ITEM_SAVE_DATA_FAIL: 'DOGS_ITEM_SAVE_DATA_FAIL',\n\n  DOGS_ITEM_CHANGE_MODE_TO_EDIT: 'DOGS_ITEM_CHANGE_MODE_TO_EDIT',\n  DOGS_ITEM_CHANGE_MODE_TO_VIEW: 'DOGS_ITEM_CHANGE_MODE_TO_VIEW',\n  DOGS_ITEM_CHANGE_FIELD_VALUE: 'DOGS_ITEM_CHANGE_FIELD_VALUE',\n};\n\nexport const DOGS_ITEM_FIELDS = {\n  [DOGS_FIELDS_ID.NAME]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.NAME],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.BIRTHDAY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.BIRTHDAY],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.SEX]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.SEX],\n    type: 'select',\n  },\n  [DOGS_FIELDS_ID.ROW]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.ROW],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.AVAIRY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.AVAIRY],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.CATALOG_LINK]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.CATALOG_LINK],\n    type: 'link',\n  },\n  [DOGS_FIELDS_ID.CHIP_ID]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.CHIP_ID],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.ISWALKING]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.ISWALKING],\n    type: 'select',\n  },\n  [DOGS_FIELDS_ID.SHELTERDAY]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.SHELTERDAY],\n    type: 'input',\n  },\n  [DOGS_FIELDS_ID.STATUS]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.STATUS],\n    type: 'select',\n  },\n  [DOGS_FIELDS_ID.WALKING_GROUP]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.WALKING_GROUP],\n    type: 'select',\n  },\n  [DOGS_FIELDS_ID.DESCRIPTION]: {\n    ...DOGS_FIELDS[DOGS_FIELDS_ID.DESCRIPTION],\n    type: 'textarea',\n  },\n}\n\nexport const DICTIONARIES = {\n  sex: [\n    {\n      label: 'мужской',\n      value: 'male',\n    },\n    {\n      label: 'женский',\n      value: 'female',\n    },\n  ],\n  isWalking: [\n    {\n      label: 'да',\n      value: true,\n    },\n    {\n      label: 'нет',\n      value: false,\n    },\n  ],\n  status: [\n    {\n      label: 'healthy',\n      value: 'здоровая',\n    },\n    {\n      label: 'hospice',\n      value: 'хоспис',\n    },\n    {\n      label: 'insulator',\n      value: 'изолятор',\n    },\n    {\n      label: 'supervised',\n      value: 'supervised',\n    },\n  ],\n  walkingGroup: [\n    {\n      label: 'Выгул №1',\n      value: '1',\n    },\n    {\n      label: 'Выгул №2',\n      value: '2',\n    },\n    {\n      label: 'Выгул №3',\n      value: '3',\n    },\n    {\n      label: 'Выгул №4',\n      value: '4',\n    },\n    {\n      label: 'Не гуляет',\n      value: 'null',\n    },\n  ],\n};","import { ACTION_TYPES } from './constants';\nimport {\n  fetchDogById,\n  saveDogData,\n} from '../../../backend';\n\nconst dogsItemGetDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_REQUEST,\n});\n\nconst dogsItemGetDataSuccess = dogData => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_SUCCESS,\n  payload: {\n    dogData,\n  },\n});\n\nconst dogsItemGetDataFail = error => ({\n  type: ACTION_TYPES.DOGS_ITEM_GET_DATA_FAIL,\n  error,\n});\n\nexport const fetchDogDataAction = chipId =>\n  dispatch => {\n    dispatch(dogsItemGetDataRequest());\n\n    fetchDogById(chipId)\n      .then(dogData => dispatch(dogsItemGetDataSuccess(dogData)))\n      .catch(error => dispatch(dogsItemGetDataFail(error)));\n  };\n\nconst dogsItemSaveDogDataRequest = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_REQUEST,\n});\n\nconst dogsItemSaveDogDataSuccess = dogData => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_SUCCESS,\n  payload: {\n    dogData,\n  },\n});\n\nconst dogsItemSaveDogDataFail = error => ({\n  type: ACTION_TYPES.DOGS_ITEM_SAVE_DATA_FAIL,\n  error,\n});\n\nexport const saveDogDataAction = dogData =>\n  dispatch => {\n    dispatch(dogsItemSaveDogDataRequest());\n\n    saveDogData(dogData)\n      .then(chipId => {\n        dispatch(dogsItemSaveDogDataSuccess(chipId));\n        dispatch(fetchDogDataAction(chipId));\n      })\n      .catch(error => dispatch(dogsItemSaveDogDataFail(error)));\n  };\n\nexport const dogsItemChangeModeToEditAction = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_EDIT,\n  payload: {},\n});\n\nexport const dogsItemChangeModeToViewAction = () => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_VIEW,\n  payload: {},\n});\n  \nexport const dogsItemChangeFieldValueAction = dogData => ({\n  type: ACTION_TYPES.DOGS_ITEM_CHANGE_FIELD_VALUE,\n  payload: {\n    ...dogData,\n  },\n});","const dogDataSelector = state => state.dogData;\n\nconst isLoadingSelector = state => state.isLoading;\n\nconst errorSelector = state => state.error;\n\nconst isEditingSelector = state => state.isEditing;\n\nconst savedCopySelector = state => state.savedCopy;\n\nconst fieldsSelector = state => Object.values(state.fields);\n\nconst dictionariesSelector = state => state.dictionaries;\n\nconst mapStateToProps = ({ dogsItemState: state }) => ({\n  dogData: dogDataSelector(state),\n  isLoading: isLoadingSelector(state),\n  error: errorSelector(state),\n  isEditing: isEditingSelector(state),\n  savedCopy: savedCopySelector(state),\n  fields: fieldsSelector(state),\n  dictionaries: dictionariesSelector(state),\n});\n\nexport default mapStateToProps;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport Container from './container';\nimport * as actions from './action-creators';\nimport mapStateToProps from './selectors';\n\nconst withConnect = connect(mapStateToProps, actions);\n\nconst DogsItemContainer = compose(\n  withRouter, \n  withConnect,\n)(Container);\n\nexport default DogsItemContainer;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 70%;\n  margin: 0 auto;\n  padding: 50px 0;\n`;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport DogsListContainer from '../../containers/dogs/list';\nimport DogsItemContainer from '../../containers/dogs/item';\n\nimport { Wrapper } from './styles.js';\n\nconst App = () => (\n  <Wrapper>\n    <Router>\n      <Route path=\"/\" exact component={DogsListContainer} />\n      <Route path=\"/dog/:id\" component={DogsItemContainer} />\n    </Router>\n  </Wrapper>\n);\n\nexport default App;","import {\n  ACTION_TYPES,\n  DOGS_LIST_COLUMNS,\n  SORT_TYPES,\n  GROUP_TYPES,\n} from './constants';\n\nconst initialState = {\n  dogsList: [],\n  isLoading: false,\n  error: null,\n  columns: DOGS_LIST_COLUMNS,\n  sortParams: {\n    items: SORT_TYPES,\n    fieldId: 'birthdayAsc',\n  },\n  groupParams: {\n    items: GROUP_TYPES,\n    fieldId: 'avairy',\n  },\n  searchString: '',\n};\n\nconst dogsListReducer = (state = initialState, action) => {\n  const { type, payload, error } = action;\n\n  switch (type) {\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        dogsList: payload.dogsList,\n        isLoading: false,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_GET_DATA_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error,\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_SORT:\n      return {\n        ...state,\n        sortParams: {\n          ...state.sortParams,\n          fieldId: payload.fieldId,\n        },\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_GROUP:\n      return {\n        ...state,\n        groupParams: {\n          ...state.groupParams,\n          fieldId: payload.fieldId,\n        },\n      };\n\n    case ACTION_TYPES.DOGS_LIST_CHANGE_SEARCH:\n      return {\n        ...state,\n        searchString: payload.searchString,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dogsListReducer;","import {\n  ACTION_TYPES,\n  DOGS_ITEM_FIELDS,\n  DICTIONARIES,\n} from './constants';\n\nconst initialState = {\n  dogData: {},\n  isLoading: false,\n  error: null,\n  isEditing: false,\n  savedCopy: {},\n  fields: DOGS_ITEM_FIELDS,\n  dictionaries: DICTIONARIES,\n};\n\nconst dogsItemReducer = (state = initialState, action) => {\n  const { type, payload, error } = action;\n\n  switch (type) {\n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        dogData: payload.dogData,\n        isLoading: false,\n        savedCopy: {\n          ...payload.dogData,\n        },\n      };\n    \n    case ACTION_TYPES.DOGS_ITEM_GET_DATA_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error,\n      };\n      \n      case ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_EDIT:\n        return {\n          ...state,\n          isEditing: true,\n          savedCopy: {\n            ...state.dogData,\n          },\n        };\n\n      case ACTION_TYPES.DOGS_ITEM_CHANGE_MODE_TO_VIEW:\n        return {\n          ...state,\n          isEditing: false,\n          dogData: {\n            ...state.savedCopy,\n          },\n          savedCopy: {},\n        };\n\n      case ACTION_TYPES.DOGS_ITEM_CHANGE_FIELD_VALUE:\n        return {\n          ...state,\n          dogData: {\n            ...state.dogData,\n            [payload.fieldName]: payload.fieldValue,\n          },\n        };\n\n    default:\n      return state;\n  }\n};\n\nexport default dogsItemReducer;","import { combineReducers } from 'redux';\nimport dogsListReducer from '../containers/dogs/list/reducer';\nimport dogsItemReducer from '../containers/dogs/item/reducer';\n\nexport default combineReducers({\n  dogsListState: dogsListReducer,\n  dogsItemState: dogsItemReducer,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './root-reducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport store from './store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}